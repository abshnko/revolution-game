[{"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js":"1","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js":"2","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js":"3","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\Question.js":"4","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\CurrentInfo.js":"5","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\InfoColumn.js":"6","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\Image.js":"7","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\Loading.js":"8","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js":"9","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\LoseScreen.js":"10","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js":"11"},{"size":197,"mtime":1622542163094,"results":"12","hashOfConfig":"13"},{"size":7588,"mtime":1622627861102,"results":"14","hashOfConfig":"13"},{"size":155680,"mtime":1622577906010,"results":"15","hashOfConfig":"13"},{"size":2788,"mtime":1622365174559,"results":"16","hashOfConfig":"13"},{"size":1043,"mtime":1622268632618,"results":"17","hashOfConfig":"13"},{"size":1031,"mtime":1622627745830,"results":"18","hashOfConfig":"13"},{"size":492,"mtime":1622365848624,"results":"19","hashOfConfig":"13"},{"size":239,"mtime":1622365990121,"results":"20","hashOfConfig":"13"},{"size":2407,"mtime":1622619858785,"results":"21","hashOfConfig":"13"},{"size":306,"mtime":1622549978942,"results":"22","hashOfConfig":"13"},{"size":372,"mtime":1622627194852,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"l6ohlv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js",[],["49","50"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js",["51","52","53","54","55","56","57"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\Question.js",["58","59"],"import React from \"react\";\r\nimport { BsQuestion } from \"react-icons/bs\";\r\n\r\nconst Question = ({ question, nextClick }) => {\r\n  return (\r\n    <>\r\n      <div className=\"img-ref\">\r\n        <a href={question[0].imgRef}>источник</a>\r\n      </div>\r\n      <div className=\"id-testing\">current: {question[0].id}</div>\r\n      <div className=\"question\">\r\n        <h2>{question[0].text}</h2>\r\n      </div>\r\n      {question[0].options.length > 1 && (\r\n        <div className=\"options\">\r\n          <div className=\"option-container\">\r\n            {question[0].options.map((option) => {\r\n              if (\"nextJump\" in option) {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const nextJump = option.nextJump;\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    <div className=\"next-option-testing\">\r\n                      nextJump: {option.nextJump}\r\n                    </div>\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          nextJump,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {option.text}\r\n                    </button>\r\n                  </>\r\n                );\r\n              } else {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    <div className=\"next-option-testing\">\r\n                      next: {option.next}\r\n                    </div>\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          0,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {option.text}\r\n                    </button>\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\CurrentInfo.js",["60","61"],"import React from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nconst CurrentInfo = ({\r\n  question,\r\n  setIsShowInfo,\r\n  INFOS,\r\n  currentInfoDisplayed,\r\n}) => {\r\n  return (\r\n    <div className=\"card\" id={question[0].id}>\r\n      <div className=\"close-info\">\r\n        <button\r\n          onClick={() => {\r\n            setIsShowInfo(false);\r\n            INFOS.map((INFO) => {\r\n              INFO.infos.map((info, infoIndex) => {\r\n                info.isActive = false;\r\n              });\r\n            });\r\n          }}\r\n        >\r\n          <i>\r\n            <AiOutlineClose />\r\n          </i>\r\n        </button>\r\n      </div>\r\n      <div className=\"infoName\">\r\n        <h2>{currentInfoDisplayed.infoName}</h2>\r\n      </div>\r\n      {/* <div className=\"img-container\">\r\n                  <img className=\"headImage\" src={placeholder} alt=\"img here\" />\r\n                </div> */}\r\n\r\n      <div className=\"info-text\">\r\n        <p>{currentInfoDisplayed.infoText}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentInfo;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\InfoColumn.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\Image.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\Loading.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\LoseScreen.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":27},{"ruleId":"66","severity":1,"message":"70","line":2,"column":31,"nodeType":"68","messageId":"69","endLine":2,"endColumn":37},{"ruleId":"66","severity":1,"message":"71","line":11,"column":10,"nodeType":"68","messageId":"69","endLine":11,"endColumn":22},{"ruleId":"66","severity":1,"message":"72","line":24,"column":10,"nodeType":"68","messageId":"69","endLine":24,"endColumn":24},{"ruleId":"66","severity":1,"message":"73","line":28,"column":17,"nodeType":"68","messageId":"69","endLine":28,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":97,"column":6,"nodeType":"76","endLine":97,"endColumn":16,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":108,"column":6,"nodeType":"76","endLine":108,"endColumn":23,"suggestions":"79"},{"ruleId":"66","severity":1,"message":"80","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":49,"column":23,"nodeType":"68","messageId":"83","endLine":49,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":16,"column":30,"nodeType":"86","messageId":"87","endLine":16,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":17,"column":48,"nodeType":"86","messageId":"87","endLine":17,"endColumn":50},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'INFOSReducer' is defined but never used.","'isShowQuestion' is assigned a value but never used.","'setGrade' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkOptions'. Either include it or remove the dependency array.","ArrayExpression",["90"],"React Hook useEffect has missing dependencies: 'addINFO', 'question', and 'setShowQuestionSatus'. Either include them or remove the dependency array.",["91"],"'BsQuestion' is defined but never used.","no-redeclare","'jumpFromHere' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [checkOptions, question]",{"range":"96","text":"97"},"Update the dependencies array to be: [addINFO, question, questionCounter, setShowQuestionSatus]",{"range":"98","text":"99"},[3081,3091],"[checkOptions, question]",[3289,3306],"[addINFO, question, questionCounter, setShowQuestionSatus]"]