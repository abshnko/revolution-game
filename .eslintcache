[{"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js":"1","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js":"2","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js":"3","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js":"4","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js":"5","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js":"6","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js":"7","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js":"8","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js":"9","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js":"10","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js":"11","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js":"12","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js":"13","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js":"14","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js":"15","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js":"16","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js":"17","C:\\Programming\\revolution-text-game\\client\\src\\index.js":"18","C:\\Programming\\revolution-text-game\\client\\src\\App.js":"19","C:\\Programming\\revolution-text-game\\client\\src\\reducers\\index.js":"20","C:\\Programming\\revolution-text-game\\client\\src\\data.js":"21","C:\\Programming\\revolution-text-game\\client\\src\\actions\\questions.js":"22","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\GamePage.js":"23","C:\\Programming\\revolution-text-game\\client\\src\\reducers\\questions.js":"24","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Gameplay.js":"25","C:\\Programming\\revolution-text-game\\client\\src\\constants\\actionTypes.js":"26","C:\\Programming\\revolution-text-game\\client\\src\\api\\index.js":"27","C:\\Programming\\revolution-text-game\\client\\src\\periods.js":"28","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\CurrentInfo.js":"29","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\ChooseSex.js":"30","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\LoseScreen.js":"31","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Image.js":"32","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Timeline.js":"33","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Loading.js":"34","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\QuestionMap.js":"35","C:\\Programming\\revolution-text-game\\client\\src\\utils\\notifyers.js":"36","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\EditQuestion.js":"37","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\AddOptions.js":"38","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\AddInfosQuestion.js":"39","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\AddInfosOptions.js":"40","C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\Arrow.jsx":"41","C:\\Programming\\revolution-text-game\\client\\src\\utils\\resolutionFunctions.js":"42","C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\InfoTriangleBullet.jsx":"43","C:\\Programming\\revolution-text-game\\client\\src\\components\\Rules.js":"44","C:\\Programming\\revolution-text-game\\client\\src\\components\\Creators.js":"45","C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\EditIcon.jsx":"46","C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\DeleteIcon.jsx":"47","C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\AddIcon.jsx":"48","C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\MapIcon.jsx":"49","C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\ExitIcon.jsx":"50","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Question.js":"51","C:\\Programming\\revolution-text-game\\client\\src\\components\\AdminPage.js":"52"},{"size":197,"mtime":1622542163094,"results":"53","hashOfConfig":"54"},{"size":568,"mtime":1625170991523,"results":"55","hashOfConfig":"54"},{"size":157918,"mtime":1625233920935,"results":"56","hashOfConfig":"54"},{"size":2407,"mtime":1622619858785,"results":"57","hashOfConfig":"54"},{"size":372,"mtime":1622627194852,"results":"58","hashOfConfig":"54"},{"size":608,"mtime":1625171018511,"results":"59","hashOfConfig":"54"},{"size":8495,"mtime":1625170982188,"results":"60","hashOfConfig":"54"},{"size":4406,"mtime":1624717023143,"results":"61","hashOfConfig":"54"},{"size":1109,"mtime":1624717001034,"results":"62","hashOfConfig":"54"},{"size":492,"mtime":1624717000814,"results":"63","hashOfConfig":"54"},{"size":1031,"mtime":1624717000686,"results":"64","hashOfConfig":"54"},{"size":295,"mtime":1624717000143,"results":"65","hashOfConfig":"54"},{"size":284,"mtime":1624717000527,"results":"66","hashOfConfig":"54"},{"size":1234,"mtime":1625253501772,"results":"67","hashOfConfig":"54"},{"size":795,"mtime":1625235504649,"results":"68","hashOfConfig":"54"},{"size":4946,"mtime":1625310646523,"results":"69","hashOfConfig":"54"},{"size":226,"mtime":1625235328239,"results":"70","hashOfConfig":"54"},{"size":487,"mtime":1642620534677,"results":"71","hashOfConfig":"72"},{"size":1714,"mtime":1642620534678,"results":"73","hashOfConfig":"72"},{"size":146,"mtime":1641728648825,"results":"74","hashOfConfig":"72"},{"size":238711,"mtime":1641647866882,"results":"75","hashOfConfig":"72"},{"size":1049,"mtime":1642243674850,"results":"76","hashOfConfig":"72"},{"size":2267,"mtime":1642620138945,"results":"77","hashOfConfig":"72"},{"size":592,"mtime":1642243790712,"results":"78","hashOfConfig":"72"},{"size":17223,"mtime":1642620369919,"results":"79","hashOfConfig":"72"},{"size":138,"mtime":1642243507277,"results":"80","hashOfConfig":"72"},{"size":401,"mtime":1642274937010,"results":"81","hashOfConfig":"72"},{"size":372,"mtime":1638172571328,"results":"82","hashOfConfig":"72"},{"size":2456,"mtime":1642614944460,"results":"83","hashOfConfig":"72"},{"size":1942,"mtime":1640458155709,"results":"84","hashOfConfig":"72"},{"size":588,"mtime":1636288283291,"results":"85","hashOfConfig":"72"},{"size":697,"mtime":1642618900436,"results":"86","hashOfConfig":"72"},{"size":3974,"mtime":1642622487885,"results":"87","hashOfConfig":"72"},{"size":235,"mtime":1642618833080,"results":"88","hashOfConfig":"72"},{"size":13228,"mtime":1642603743462,"results":"89","hashOfConfig":"72"},{"size":959,"mtime":1642278821076,"results":"90","hashOfConfig":"72"},{"size":26862,"mtime":1642615960318,"results":"91","hashOfConfig":"72"},{"size":13355,"mtime":1642615936069,"results":"92","hashOfConfig":"72"},{"size":5252,"mtime":1642615914959,"results":"93","hashOfConfig":"72"},{"size":5022,"mtime":1642615720995,"results":"94","hashOfConfig":"72"},{"size":884,"mtime":1642616532918,"results":"95","hashOfConfig":"72"},{"size":282,"mtime":1642616767278,"results":"96","hashOfConfig":"72"},{"size":408,"mtime":1642619201524,"results":"97","hashOfConfig":"72"},{"size":3141,"mtime":1642623096408,"results":"98","hashOfConfig":"72"},{"size":3253,"mtime":1642619534368,"results":"99","hashOfConfig":"72"},{"size":691,"mtime":1642619810313,"results":"100","hashOfConfig":"72"},{"size":782,"mtime":1642619925703,"results":"101","hashOfConfig":"72"},{"size":594,"mtime":1642619873819,"results":"102","hashOfConfig":"72"},{"size":804,"mtime":1642619967340,"results":"103","hashOfConfig":"72"},{"size":639,"mtime":1642620000873,"results":"104","hashOfConfig":"72"},{"size":11304,"mtime":1642620124387,"results":"105","hashOfConfig":"72"},{"size":1754,"mtime":1642620697394,"results":"106","hashOfConfig":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"l6ohlv",{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"109"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"109"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mpdg1o",{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"181"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js",[],["217","218"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js",["219"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js",["220"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js",["221","222","223","224","225","226","227","228","229","230"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js",["231","232","233","234"],"import React from \"react\";\r\nimport { BsQuestion } from \"react-icons/bs\";\r\n\r\nconst Question = ({ question, nextClick, chooseDisplayedInfo }) => {\r\n  const checkInfosForOptions = (option) => {\r\n    if (!option.infos) return option.text;\r\n    let allId = option.infos.map((e) => e.id);\r\n    let allText = option.infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n    let parts = option.text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n    return parts;\r\n  };\r\n\r\n  const checkInfosForQuestion = (question) => {\r\n    if (!question[0].infos) return <h2>{question[0].text}</h2>;\r\n    let allId = question[0].infos.map((e) => e.id);\r\n    let allText = question[0].infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n    let parts = question[0].text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    console.log(parts);\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n    return <h2>{parts}</h2>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {question[0].imgRef !== \"\" && (\r\n        <div className=\"img-ref\">\r\n          <a href={question[0].imgRef}>источник</a>\r\n        </div>\r\n      )}\r\n      {/* <div className=\"id-testing\">current: {question[0].id}</div> */}{\" \"}\r\n      {/*testing */}\r\n      <div className=\"question\">{checkInfosForQuestion(question)}</div>\r\n      {question[0].options.length > 1 && (\r\n        <div className=\"options\">\r\n          <div className=\"option-container\">\r\n            {question[0].options.map((option) => {\r\n              if (\"nextJump\" in option) {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const nextJump = option.nextJump;\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    {/* <div className=\"next-option-testing\">\r\n                      nextJump: {option.nextJump}\r\n                    </div> */}\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          nextJump,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {checkInfosForOptions(option)}\r\n                    </button>\r\n                  </>\r\n                );\r\n              } else {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    {/* <div className=\"next-option-testing\">\r\n                      next: {option.next}\r\n                    </div> */}\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          0,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {checkInfosForOptions(option)}\r\n                    </button>\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js",["235","236"],"import React from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nconst CurrentInfo = ({\r\n  question,\r\n  setIsShowInfo,\r\n  INFOS,\r\n  currentInfoDisplayed,\r\n}) => {\r\n  return (\r\n    <div className=\"card\" id={question[0].id}>\r\n      <div className=\"close-info\">\r\n        <button\r\n          onClick={() => {\r\n            setIsShowInfo(false);\r\n            INFOS.map((INFO) => {\r\n              INFO.infos.map((info, infoIndex) => {\r\n                info.isActive = false;\r\n              });\r\n            });\r\n          }}\r\n        >\r\n          <i>\r\n            <AiOutlineClose />\r\n          </i>\r\n        </button>\r\n      </div>\r\n      <div className=\"current-info\">\r\n        <div className=\"infoName\">\r\n          <h2>{currentInfoDisplayed.infoName}</h2>\r\n        </div>\r\n        {/* <div className=\"img-container\">\r\n                  <img className=\"headImage\" src={placeholder} alt=\"img here\" />\r\n                </div> */}\r\n\r\n        <div className=\"info-text\">\r\n          <p>{currentInfoDisplayed.infoText}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentInfo;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js",["237"],"import React from \"react\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport { CgSpinner } from \"react-icons/cg\";\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <i>\r\n        <CgSpinner />\r\n      </i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\index.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\App.js",["238"],"C:\\Programming\\revolution-text-game\\client\\src\\reducers\\index.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\data.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\actions\\questions.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\GamePage.js",["239","240","241","242","243","244","245"],"C:\\Programming\\revolution-text-game\\client\\src\\reducers\\questions.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Gameplay.js",["246","247","248"],"C:\\Programming\\revolution-text-game\\client\\src\\constants\\actionTypes.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\api\\index.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\periods.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\CurrentInfo.js",["249","250"],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\ChooseSex.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\LoseScreen.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Image.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Timeline.js",["251"],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Loading.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\QuestionMap.js",[],["252","253"],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\notifyers.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\EditQuestion.js",["254","255","256","257","258"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { createQuestion, updateQuestion } from \"../../../actions/questions\";\r\nimport AddOptions from \"../Editing/AddOptions\";\r\nimport FileBase from \"react-file-base64\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../../../styles/main/edit-question.css\";\r\n\r\nimport AddInfosQuestion from \"../Editing/AddInfosQuestion\";\r\nimport { notifyAboutEdit } from \"../../../utils/notifyers\";\r\n\r\nconst EditQuestion = ({\r\n  dispatch,\r\n  questionToUpdate,\r\n  showModalQuestion,\r\n  questions,\r\n  alertDeleteQuestion,\r\n  setIdForDelete,\r\n  setAlertDeleteQuestion,\r\n  idForDelete,\r\n  initialState,\r\n  setShowModalQuestion,\r\n  setCurrentQuestionID,\r\n  currentQuestionID,\r\n  questionInitialState,\r\n  setQuestionInitialState,\r\n  setIndex,\r\n  question,\r\n  setQuestion,\r\n}) => {\r\n  const [currentOptionID, setCurrentOptionID] = useState(null);\r\n  const [currentInfoID, setCurrentInfoID] = useState(null);\r\n  const [showModalOptions, setShowModalOptions] = useState(false);\r\n  const [showInfos, setShowInfos] = useState(false);\r\n  const optionToUpdate = currentOptionID\r\n    ? questionInitialState.options.find(\r\n        (option) => option.id === currentOptionID\r\n      )\r\n    : null;\r\n\r\n  const [alertDeleteInfos, setAlertDeleteInfos] = useState(false);\r\n  const [line, setLine] = useState(\"unset\");\r\n  const [uploadedImage, setUploadedImage] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // if (uploadedImage) {\r\n    //   const data = new FormData();\r\n    //   data.append(\"file\", uploadedImage);\r\n    //   axios\r\n    //     .post(\"https://revolution-game.herokuapp.com/upload\", data, {\r\n    //       // receive two parameter endpoint url ,form data\r\n    //     })\r\n    //     .then((res) => {\r\n    //       // then print response status\r\n    //       console.log(res.statusText);\r\n    //     });\r\n    // }\r\n\r\n    if (currentQuestionID) {\r\n      dispatch(updateQuestion(currentQuestionID, questionInitialState));\r\n    } else {\r\n      dispatch(createQuestion(questionInitialState));\r\n    }\r\n    setCurrentQuestionID(null);\r\n    setShowModalQuestion(false);\r\n    setQuestionInitialState(initialState);\r\n    document.body.style.overflow = \"unset\";\r\n    notifyAboutEdit(currentQuestionID);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (questionToUpdate) setQuestionInitialState(questionToUpdate);\r\n  }, [questionToUpdate]);\r\n\r\n  useEffect(() => {\r\n    if (showModalOptions || showModalQuestion) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"unset\";\r\n    }\r\n  }, [showModalQuestion, showModalOptions]);\r\n\r\n  useEffect(() => {\r\n    if (!questionToUpdate) {\r\n      let temp = 999;\r\n      if (line === \"male\") {\r\n        if (questions.length > 0) {\r\n          questions.forEach((x) => {\r\n            if (x.id > temp && x.id < 1100) {\r\n              temp = x.id;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        if (questions.length > 0) {\r\n          questions.forEach((x) => {\r\n            if (x.id > temp && x.id > 1100) {\r\n              temp = x.id;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      setQuestionInitialState({ ...questionInitialState, id: temp + 1 });\r\n      temp = 999;\r\n    }\r\n  }, [line]);\r\n\r\n  return (\r\n    <div>\r\n      {showModalQuestion && (\r\n        <div className=\"modal-edit-question\">\r\n          <div className=\"modal-content\">\r\n            <div\r\n              className=\"header\"\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => {\r\n                  document.body.style.overflow = \"unset\";\r\n                  setQuestionInitialState(initialState);\r\n                  setShowModalQuestion(false);\r\n                  setCurrentQuestionID(null);\r\n                  setLine(\"unset\");\r\n                  console.log(showModalQuestion, showModalOptions);\r\n                }}\r\n              >\r\n                <svg className=\"svg-icon\" viewBox=\"0 0 20 20\" width=\"50\">\r\n                  <path\r\n                    fill=\"grey\"\r\n                    d=\"M8.388,10.049l4.76-4.873c0.303-0.31,0.297-0.804-0.012-1.105c-0.309-0.304-0.803-0.293-1.105,0.012L6.726,9.516c-0.303,0.31-0.296,0.805,0.012,1.105l5.433,5.307c0.152,0.148,0.35,0.223,0.547,0.223c0.203,0,0.406-0.08,0.559-0.236c0.303-0.309,0.295-0.803-0.012-1.104L8.388,10.049z\"\r\n                  ></path>\r\n                </svg>\r\n                <div>Отменить</div>\r\n              </button>\r\n              <h2 style={{ fontSize: \"24px\", fontWeight: \"300\" }}>\r\n                {currentQuestionID\r\n                  ? \"Редактирование вопроса \"\r\n                  : \"Добавление вопроса \"}\r\n                <span style={{ textDecoration: \"underline\" }}>\r\n                  {questionInitialState.id}\r\n                </span>\r\n              </h2>\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => handleSubmit(e)}\r\n                className=\"save-btn\"\r\n              >\r\n                {currentQuestionID ? \"Сохранить\" : \"Добавить\"}\r\n              </button>\r\n            </div>\r\n            <div className=\"form\">\r\n              <form autoComplete=\"off\" action=\"\">\r\n                <label htmlFor=\"\">\r\n                  Текст вопроса:\r\n                  <textarea\r\n                    type=\"text\"\r\n                    value={questionInitialState.text}\r\n                    onChange={(e) =>\r\n                      setQuestionInitialState({\r\n                        ...questionInitialState,\r\n                        text: e.target.value,\r\n                      })\r\n                    }\r\n                    style={{\r\n                      display: \"block\",\r\n                      width: \"95%\",\r\n                      minHeight: \"90px\",\r\n                    }}\r\n                  />\r\n                </label>\r\n\r\n                <div\r\n                  className=\"second-row\"\r\n                  style={{ display: \"flex\", marginTop: \"20px\" }}\r\n                >\r\n                  <label htmlFor=\"\">\r\n                    Год:\r\n                    <input\r\n                      type=\"text\"\r\n                      value={questionInitialState.year}\r\n                      onChange={(e) =>\r\n                        setQuestionInitialState({\r\n                          ...questionInitialState,\r\n                          year: e.target.value,\r\n                        })\r\n                      }\r\n                      style={{\r\n                        display: \"block\",\r\n                        marginRight: \"30px\",\r\n                        width: \"80px\",\r\n                        borderColor: \"#ababab\",\r\n                        backgroundColor: \"transparent\",\r\n                      }}\r\n                    />\r\n                  </label>\r\n                  <label htmlFor=\"\">\r\n                    Временной период:\r\n                    <select\r\n                      type=\"text\"\r\n                      value={questionInitialState.period}\r\n                      onChange={(e) =>\r\n                        setQuestionInitialState({\r\n                          ...questionInitialState,\r\n                          period: e.target.value,\r\n                        })\r\n                      }\r\n                      style={{ display: \"block\", marginRight: \"30px\" }}\r\n                    >\r\n                      <option value=\"\">---Выберите период---</option>\r\n                      <option value=\"1900-1914\">1900-1914</option>\r\n                      <option value=\"1914-1917\">1914-1917</option>\r\n                      <option value=\"1918-1922\">1918-1922</option>\r\n                      <option value=\"1922-1929\">1922-1929</option>\r\n                      <option value=\"1929-1941\">1929-1941</option>\r\n                      <option value=\"1941-1945\">1941-1945</option>\r\n                      <option value=\"1945-1953\">1945-1953</option>\r\n                    </select>\r\n                  </label>\r\n                  <label htmlFor=\"\">\r\n                    Ветка:\r\n                    <select\r\n                      type=\"text\"\r\n                      value={\r\n                        questionInitialState.id > 999\r\n                          ? Math.floor(questionInitialState.id / 100) === 10\r\n                            ? \"male\"\r\n                            : \"female\"\r\n                          : \"unset\"\r\n                      }\r\n                      onChange={(e) => setLine(e.target.value)}\r\n                      style={{ display: \"block\", marginRight: \"30px\" }}\r\n                    >\r\n                      <option value=\"\">---Выберите ветку---</option>\r\n                      <option value=\"female\">Женская</option>\r\n                      <option value=\"male\">Мужская</option>\r\n                    </select>\r\n                  </label>\r\n                  <div className=\"image-container\">\r\n                    {questionInitialState.img !== \"\" && (\r\n                      <div className=\"image\">\r\n                        <span>Текущее изображение:</span>\r\n                        <img\r\n                          src={\r\n                            questionInitialState.img.includes(\"data:\")\r\n                              ? questionInitialState.img\r\n                              : process.env.PUBLIC_URL +\r\n                                `/images/${questionInitialState.img}`\r\n                          }\r\n                          alt=\"\"\r\n                          style={{\r\n                            width: \"100px\",\r\n                          }}\r\n                        />\r\n                        <button\r\n                          onClick={() =>\r\n                            setQuestionInitialState({\r\n                              ...questionInitialState,\r\n                              img: \"\",\r\n                            })\r\n                          }\r\n                        >\r\n                          Удалить\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                    {questionInitialState.img === \"\" && (\r\n                      <span>Выбрать изображение (опционально)</span>\r\n                    )}\r\n                    <FileBase\r\n                      type=\"file\"\r\n                      multiple={false}\r\n                      onDone={({ base64 }) =>\r\n                        setQuestionInitialState({\r\n                          ...questionInitialState,\r\n                          img: base64,\r\n                        })\r\n                      }\r\n                    />\r\n                    {/* <form\r\n                      method=\"post\"\r\n                      enctype=\"multipart/form-data\"\r\n                      action=\"/upload\"\r\n                    >\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        onChange={(e) => setUploadedImage(e.target.files[0])}\r\n                      />\r\n                    </form> */}\r\n                  </div>\r\n                  <label htmlFor=\"lose\">\r\n                    Это последний вопрос в ветке?\r\n                    <input\r\n                      className=\"checkbox\"\r\n                      type=\"checkbox\"\r\n                      id=\"lose\"\r\n                      name=\"lose\"\r\n                      value={questionInitialState.lose}\r\n                      checked={questionInitialState.lose}\r\n                      onChange={() => {\r\n                        setQuestionInitialState({\r\n                          ...questionInitialState,\r\n                          lose: !questionInitialState.lose,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <h3 className=\"options-header\">Варианты ответа:</h3>\r\n                <div className=\"options\">\r\n                  {questionInitialState.options.map((option, index) => {\r\n                    return (\r\n                      <div className=\"option\" key={option.id}>\r\n                        <div className=\"text\">\r\n                          {option.text} <br />\r\n                          {option.next === 0 ? (\r\n                            <span style={{ color: \"red\" }}>\r\n                              Следующий вопрос не установлен!\r\n                            </span>\r\n                          ) : (\r\n                            <div style={{ margin: \"10px 0\", color: \"#bbb\" }}>\r\n                              Следующий вопрос:\r\n                              <span\r\n                                style={{\r\n                                  textDecoration: \"underline\",\r\n                                  marginLeft: \"5px\",\r\n                                }}\r\n                              >\r\n                                {option.next}\r\n                              </span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                          <button\r\n                            className=\"delete-button\"\r\n                            onClick={() => {\r\n                              const copyOptions =\r\n                                questionInitialState.options.filter(\r\n                                  (x) => x.id !== option.id\r\n                                );\r\n                              setQuestionInitialState({\r\n                                ...questionInitialState,\r\n                                options: copyOptions,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <svg className=\"delete-icon\" viewBox=\"0 0 20 20\">\r\n                              <path\r\n                                fill=\"#d4d4d4\"\r\n                                d=\"M16.471,5.962c-0.365-0.066-0.709,0.176-0.774,0.538l-1.843,10.217H6.096L4.255,6.5c-0.066-0.362-0.42-0.603-0.775-0.538C3.117,6.027,2.876,6.375,2.942,6.737l1.94,10.765c0.058,0.318,0.334,0.549,0.657,0.549h8.872c0.323,0,0.6-0.23,0.656-0.549l1.941-10.765C17.074,6.375,16.833,6.027,16.471,5.962z\"\r\n                              ></path>\r\n                              <path\r\n                                fill=\"#d4d4d4\"\r\n                                d=\"M16.594,3.804H3.406c-0.369,0-0.667,0.298-0.667,0.667s0.299,0.667,0.667,0.667h13.188c0.369,0,0.667-0.298,0.667-0.667S16.963,3.804,16.594,3.804z\"\r\n                              ></path>\r\n                              <path\r\n                                fill=\"#d4d4d4\"\r\n                                d=\"M9.25,3.284h1.501c0.368,0,0.667-0.298,0.667-0.667c0-0.369-0.299-0.667-0.667-0.667H9.25c-0.369,0-0.667,0.298-0.667,0.667C8.583,2.985,8.882,3.284,9.25,3.284z\"\r\n                              ></path>\r\n                            </svg>\r\n                          </button>\r\n                          <button\r\n                            className=\"edit-button\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault();\r\n                              setCurrentOptionID(option.id);\r\n                              setShowModalOptions(true);\r\n                              //   setShowModalQuestion(false);\r\n                            }}\r\n                          >\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                              <path\r\n                                fill=\"#d4d4d4\"\r\n                                d=\"M19.404,6.65l-5.998-5.996c-0.292-0.292-0.765-0.292-1.056,0l-2.22,2.22l-8.311,8.313l-0.003,0.001v0.003l-0.161,0.161c-0.114,0.112-0.187,0.258-0.21,0.417l-1.059,7.051c-0.035,0.233,0.044,0.47,0.21,0.639c0.143,0.14,0.333,0.219,0.528,0.219c0.038,0,0.073-0.003,0.111-0.009l7.054-1.055c0.158-0.025,0.306-0.098,0.417-0.211l8.478-8.476l2.22-2.22C19.695,7.414,19.695,6.941,19.404,6.65z M8.341,16.656l-0.989-0.99l7.258-7.258l0.989,0.99L8.341,16.656z M2.332,15.919l0.411-2.748l4.143,4.143l-2.748,0.41L2.332,15.919z M13.554,7.351L6.296,14.61l-0.849-0.848l7.259-7.258l0.423,0.424L13.554,7.351zM10.658,4.457l0.992,0.99l-7.259,7.258L3.4,11.715L10.658,4.457z M16.656,8.342l-1.517-1.517V6.823h-0.003l-0.951-0.951l-2.471-2.471l1.164-1.164l4.942,4.94L16.656,8.342z\"\r\n                              ></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setShowModalOptions(true);\r\n                      //   setShowModalQuestion(false);\r\n                    }}\r\n                    style={{\r\n                      backgroundColor: \"#F4F4F4\",\r\n                      borderRadius: \"5px\",\r\n                      border: \"none\",\r\n                      minHeight: \"200px\",\r\n                      width: \"170px\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"icon icon-tabler icon-tabler-plus\"\r\n                      width=\"80%\"\r\n                      height=\"80%\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke-width=\"1\"\r\n                      stroke=\"currentColor\"\r\n                      fill=\"none\"\r\n                      //   stroke-linecap=\"round\"\r\n                      //   stroke-linejoin=\"round\"\r\n                    >\r\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                      <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n                <label htmlFor=\"infos\">\r\n                  У вопроса будет справочная информация?\r\n                  <input\r\n                    className=\"checkbox\"\r\n                    type=\"checkbox\"\r\n                    id=\"infos\"\r\n                    name=\"infos\"\r\n                    value={questionInitialState.isInfo}\r\n                    checked={questionInitialState.isInfo}\r\n                    onChange={() => {\r\n                      setShowInfos(false);\r\n                      if (questionInitialState.infos.length > 0) {\r\n                        setAlertDeleteInfos(true);\r\n                      } else {\r\n                        setQuestionInitialState({\r\n                          ...questionInitialState,\r\n                          isInfo: !questionInitialState.isInfo,\r\n                        });\r\n                      }\r\n                    }}\r\n                  />\r\n                </label>\r\n                {alertDeleteInfos && (\r\n                  <label htmlFor=\"alert\" style={{ marginLeft: \"20px\" }}>\r\n                    Удалить все справки?\r\n                    <button\r\n                      className=\"confirm-btn\"\r\n                      onClick={() => {\r\n                        setQuestionInitialState({\r\n                          ...questionInitialState,\r\n                          isInfo: false,\r\n                          infos: [],\r\n                        });\r\n                        setAlertDeleteInfos(false);\r\n                      }}\r\n                    >\r\n                      Да\r\n                    </button>\r\n                    <button\r\n                      className=\"confirm-btn\"\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setAlertDeleteInfos(false);\r\n                      }}\r\n                    >\r\n                      Нет\r\n                    </button>\r\n                  </label>\r\n                )}\r\n                {questionInitialState.isInfo && (\r\n                  <>\r\n                    <h3 className=\"options-header\">Справки для вопроса:</h3>\r\n                    <div className=\"options\">\r\n                      {questionInitialState.infos.map((info, index) => {\r\n                        return (\r\n                          <div className=\"option\" key={info.id}>\r\n                            <div className=\"text\">\r\n                              {info.name} <br />\r\n                            </div>\r\n                            <div className=\"buttons\">\r\n                              <button\r\n                                className=\"delete-button\"\r\n                                onClick={() => {\r\n                                  const copyInfos =\r\n                                    questionInitialState.infos.filter(\r\n                                      (x) => x.id !== info.id\r\n                                    );\r\n                                  setQuestionInitialState({\r\n                                    ...questionInitialState,\r\n                                    infos: copyInfos,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <svg\r\n                                  className=\"delete-icon\"\r\n                                  viewBox=\"0 0 20 20\"\r\n                                >\r\n                                  <path\r\n                                    fill=\"#d4d4d4\"\r\n                                    d=\"M16.471,5.962c-0.365-0.066-0.709,0.176-0.774,0.538l-1.843,10.217H6.096L4.255,6.5c-0.066-0.362-0.42-0.603-0.775-0.538C3.117,6.027,2.876,6.375,2.942,6.737l1.94,10.765c0.058,0.318,0.334,0.549,0.657,0.549h8.872c0.323,0,0.6-0.23,0.656-0.549l1.941-10.765C17.074,6.375,16.833,6.027,16.471,5.962z\"\r\n                                  ></path>\r\n                                  <path\r\n                                    fill=\"#d4d4d4\"\r\n                                    d=\"M16.594,3.804H3.406c-0.369,0-0.667,0.298-0.667,0.667s0.299,0.667,0.667,0.667h13.188c0.369,0,0.667-0.298,0.667-0.667S16.963,3.804,16.594,3.804z\"\r\n                                  ></path>\r\n                                  <path\r\n                                    fill=\"#d4d4d4\"\r\n                                    d=\"M9.25,3.284h1.501c0.368,0,0.667-0.298,0.667-0.667c0-0.369-0.299-0.667-0.667-0.667H9.25c-0.369,0-0.667,0.298-0.667,0.667C8.583,2.985,8.882,3.284,9.25,3.284z\"\r\n                                  ></path>\r\n                                </svg>\r\n                              </button>\r\n                              <button\r\n                                className=\"edit-button\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  setCurrentInfoID(info.id);\r\n                                  setShowInfos(true);\r\n                                  // setShowModalQuestion(false);\r\n                                }}\r\n                              >\r\n                                <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                                  <path\r\n                                    fill=\"#d4d4d4\"\r\n                                    d=\"M19.404,6.65l-5.998-5.996c-0.292-0.292-0.765-0.292-1.056,0l-2.22,2.22l-8.311,8.313l-0.003,0.001v0.003l-0.161,0.161c-0.114,0.112-0.187,0.258-0.21,0.417l-1.059,7.051c-0.035,0.233,0.044,0.47,0.21,0.639c0.143,0.14,0.333,0.219,0.528,0.219c0.038,0,0.073-0.003,0.111-0.009l7.054-1.055c0.158-0.025,0.306-0.098,0.417-0.211l8.478-8.476l2.22-2.22C19.695,7.414,19.695,6.941,19.404,6.65z M8.341,16.656l-0.989-0.99l7.258-7.258l0.989,0.99L8.341,16.656z M2.332,15.919l0.411-2.748l4.143,4.143l-2.748,0.41L2.332,15.919z M13.554,7.351L6.296,14.61l-0.849-0.848l7.259-7.258l0.423,0.424L13.554,7.351zM10.658,4.457l0.992,0.99l-7.259,7.258L3.4,11.715L10.658,4.457z M16.656,8.342l-1.517-1.517V6.823h-0.003l-0.951-0.951l-2.471-2.471l1.164-1.164l4.942,4.94L16.656,8.342z\"\r\n                                  ></path>\r\n                                </svg>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          setShowInfos(true);\r\n                        }}\r\n                        style={{\r\n                          backgroundColor: \"#F4F4F4\",\r\n                          borderRadius: \"5px\",\r\n                          border: \"none\",\r\n                          minHeight: \"200px\",\r\n                          width: \"170px\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"icon icon-tabler icon-tabler-plus\"\r\n                          width=\"80%\"\r\n                          height=\"80%\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke-width=\"1\"\r\n                          stroke=\"currentColor\"\r\n                          fill=\"none\"\r\n                        >\r\n                          <path\r\n                            stroke=\"none\"\r\n                            d=\"M0 0h24v24H0z\"\r\n                            fill=\"none\"\r\n                          ></path>\r\n                          <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n                          <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showModalOptions && (\r\n        <AddOptions\r\n          setShowModalOptions={setShowModalOptions}\r\n          questionInitialState={questionInitialState}\r\n          setQuestionInitialState={setQuestionInitialState}\r\n          setShowModalQuestion={setShowModalQuestion}\r\n          questions={questions}\r\n          optionToUpdate={optionToUpdate}\r\n          setCurrentOptionID={setCurrentOptionID}\r\n          currentOptionID={currentOptionID}\r\n        />\r\n      )}\r\n      {showInfos && (\r\n        <AddInfosQuestion\r\n          setShowInfos={setShowInfos}\r\n          setShowModalQuestion={setShowModalQuestion}\r\n          questionInitialState={questionInitialState}\r\n          currentInfoID={currentInfoID}\r\n          setQuestionInitialState={setQuestionInitialState}\r\n          setCurrentInfoID={setCurrentInfoID}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditQuestion;\r\n","C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\AddOptions.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\AddInfosQuestion.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Editing\\AddInfosOptions.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\Arrow.jsx",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\resolutionFunctions.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\InfoTriangleBullet.jsx",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\Rules.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\Creators.js",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\EditIcon.jsx",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\DeleteIcon.jsx",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\AddIcon.jsx",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\MapIcon.jsx",[],"C:\\Programming\\revolution-text-game\\client\\src\\utils\\svgs\\ExitIcon.jsx",[],"C:\\Programming\\revolution-text-game\\client\\src\\components\\GamePage\\Question.js",["259","260"],"C:\\Programming\\revolution-text-game\\client\\src\\components\\AdminPage.js",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":2,"column":50,"nodeType":"267","messageId":"268","endLine":2,"endColumn":54},{"ruleId":"265","severity":1,"message":"269","line":6,"column":22,"nodeType":"267","messageId":"268","endLine":6,"endColumn":35},{"ruleId":"265","severity":1,"message":"270","line":1,"column":17,"nodeType":"267","messageId":"268","endLine":1,"endColumn":27},{"ruleId":"265","severity":1,"message":"271","line":2,"column":31,"nodeType":"267","messageId":"268","endLine":2,"endColumn":37},{"ruleId":"265","severity":1,"message":"272","line":3,"column":35,"nodeType":"267","messageId":"268","endLine":3,"endColumn":41},{"ruleId":"265","severity":1,"message":"273","line":3,"column":43,"nodeType":"267","messageId":"268","endLine":3,"endColumn":48},{"ruleId":"265","severity":1,"message":"266","line":3,"column":50,"nodeType":"267","messageId":"268","endLine":3,"endColumn":54},{"ruleId":"265","severity":1,"message":"274","line":11,"column":10,"nodeType":"267","messageId":"268","endLine":11,"endColumn":22},{"ruleId":"265","severity":1,"message":"275","line":25,"column":10,"nodeType":"267","messageId":"268","endLine":25,"endColumn":24},{"ruleId":"265","severity":1,"message":"276","line":29,"column":17,"nodeType":"267","messageId":"268","endLine":29,"endColumn":25},{"ruleId":"277","severity":1,"message":"278","line":98,"column":6,"nodeType":"279","endLine":98,"endColumn":16,"suggestions":"280"},{"ruleId":"277","severity":1,"message":"281","line":109,"column":6,"nodeType":"279","endLine":109,"endColumn":23,"suggestions":"282"},{"ruleId":"265","severity":1,"message":"283","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":20},{"ruleId":"284","severity":1,"message":"285","line":13,"column":9,"nodeType":"286","endLine":18,"endColumn":10},{"ruleId":"284","severity":1,"message":"285","line":38,"column":9,"nodeType":"286","endLine":43,"endColumn":10},{"ruleId":"287","severity":1,"message":"288","line":101,"column":23,"nodeType":"267","messageId":"289","endLine":101,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":16,"column":30,"nodeType":"292","messageId":"293","endLine":16,"endColumn":32},{"ruleId":"290","severity":1,"message":"291","line":17,"column":48,"nodeType":"292","messageId":"293","endLine":17,"endColumn":50},{"ruleId":"265","severity":1,"message":"294","line":2,"column":10,"nodeType":"267","messageId":"268","endLine":2,"endColumn":19},{"ruleId":"265","severity":1,"message":"295","line":2,"column":27,"nodeType":"267","messageId":"268","endLine":2,"endColumn":33},{"ruleId":"265","severity":1,"message":"296","line":2,"column":20,"nodeType":"267","messageId":"268","endLine":2,"endColumn":29},{"ruleId":"265","severity":1,"message":"297","line":5,"column":3,"nodeType":"267","messageId":"268","endLine":5,"endColumn":15},{"ruleId":"265","severity":1,"message":"298","line":6,"column":3,"nodeType":"267","messageId":"268","endLine":6,"endColumn":17},{"ruleId":"265","severity":1,"message":"299","line":7,"column":3,"nodeType":"267","messageId":"268","endLine":7,"endColumn":17},{"ruleId":"265","severity":1,"message":"295","line":10,"column":27,"nodeType":"267","messageId":"268","endLine":10,"endColumn":33},{"ruleId":"265","severity":1,"message":"272","line":10,"column":35,"nodeType":"267","messageId":"268","endLine":10,"endColumn":41},{"ruleId":"265","severity":1,"message":"273","line":10,"column":43,"nodeType":"267","messageId":"268","endLine":10,"endColumn":48},{"ruleId":"277","severity":1,"message":"300","line":82,"column":6,"nodeType":"279","endLine":82,"endColumn":17,"suggestions":"301"},{"ruleId":"277","severity":1,"message":"302","line":114,"column":6,"nodeType":"279","endLine":114,"endColumn":16,"suggestions":"303"},{"ruleId":"277","severity":1,"message":"304","line":124,"column":6,"nodeType":"279","endLine":124,"endColumn":23,"suggestions":"305"},{"ruleId":"265","severity":1,"message":"306","line":5,"column":25,"nodeType":"267","messageId":"268","endLine":5,"endColumn":40},{"ruleId":"265","severity":1,"message":"307","line":13,"column":10,"nodeType":"267","messageId":"268","endLine":13,"endColumn":14},{"ruleId":"277","severity":1,"message":"308","line":94,"column":6,"nodeType":"279","endLine":94,"endColumn":32,"suggestions":"309"},{"ruleId":"261","replacedBy":"310"},{"ruleId":"263","replacedBy":"311"},{"ruleId":"265","severity":1,"message":"312","line":6,"column":8,"nodeType":"267","messageId":"268","endLine":6,"endColumn":13},{"ruleId":"265","severity":1,"message":"313","line":44,"column":10,"nodeType":"267","messageId":"268","endLine":44,"endColumn":23},{"ruleId":"265","severity":1,"message":"314","line":44,"column":25,"nodeType":"267","messageId":"268","endLine":44,"endColumn":41},{"ruleId":"277","severity":1,"message":"315","line":75,"column":6,"nodeType":"279","endLine":75,"endColumn":24,"suggestions":"316"},{"ruleId":"277","severity":1,"message":"317","line":108,"column":6,"nodeType":"279","endLine":108,"endColumn":12,"suggestions":"318"},{"ruleId":"284","severity":1,"message":"285","line":64,"column":9,"nodeType":"286","endLine":70,"endColumn":10},{"ruleId":"284","severity":1,"message":"285","line":149,"column":9,"nodeType":"286","endLine":154,"endColumn":10},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setPasswordOK' is assigned a value but never used.","'useReducer' is defined but never used.","'useRef' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'INFOSReducer' is defined but never used.","'isShowQuestion' is assigned a value but never used.","'setGrade' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkOptions'. Either include it or remove the dependency array.","ArrayExpression",["321"],"React Hook useEffect has missing dependencies: 'addINFO', 'question', and 'setShowQuestionSatus'. Either include them or remove the dependency array.",["322"],"'BsQuestion' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'jumpFromHere' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FaSpinner' is defined but never used.","'Router' is defined but never used.","'useEffect' is defined but never used.","'getQuestions' is defined but never used.","'createQuestion' is defined but never used.","'updateQuestion' is defined but never used.","React Hook useEffect has a missing dependency: 'rememberIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setQuestion' needs the current value of 'rememberIndex'.",["323"],"React Hook useEffect has missing dependencies: 'checkOptions' and 'questions.length'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has missing dependencies: 'question' and 'questions.length'. Either include them or remove the dependency array.",["325"],"'TransitionGroup' is defined but never used.","'show' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addNewPeriod'. Either include it or remove the dependency array.",["326"],["319"],["320"],"'axios' is defined but never used.","'uploadedImage' is assigned a value but never used.","'setUploadedImage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setQuestionInitialState'. Either include it or remove the dependency array. If 'setQuestionInitialState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["327"],"React Hook useEffect has missing dependencies: 'questionInitialState', 'questionToUpdate', 'questions', and 'setQuestionInitialState'. Either include them or remove the dependency array. If 'setQuestionInitialState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["328"],"no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},"Update the dependencies array to be: [checkOptions, question]",{"range":"345","text":"346"},"Update the dependencies array to be: [addINFO, question, questionCounter, setShowQuestionSatus]",{"range":"347","text":"348"},"Update the dependencies array to be: [questions, rememberIndex]",{"range":"349","text":"350"},"Update the dependencies array to be: [checkOptions, question, questions.length]",{"range":"351","text":"352"},"Update the dependencies array to be: [question, questionCounter, questions.length]",{"range":"353","text":"354"},"Update the dependencies array to be: [questionCounter, counter, addNewPeriod]",{"range":"355","text":"356"},"Update the dependencies array to be: [questionToUpdate, setQuestionInitialState]",{"range":"357","text":"358"},"Update the dependencies array to be: [line, questionInitialState, questionToUpdate, questions, setQuestionInitialState]",{"range":"359","text":"360"},[3265,3275],"[checkOptions, question]",[3484,3501],"[addINFO, question, questionCounter, setShowQuestionSatus]",[2997,3008],"[questions, rememberIndex]",[3819,3829],"[checkOptions, question, questions.length]",[4128,4145],"[question, questionCounter, questions.length]",[2975,3001],"[questionCounter, counter, addNewPeriod]",[2373,2391],"[questionToUpdate, setQuestionInitialState]",[3249,3255],"[line, questionInitialState, questionToUpdate, questions, setQuestionInitialState]"]