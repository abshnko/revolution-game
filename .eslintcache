[{"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js":"1","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js":"2","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js":"3","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js":"4","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js":"5","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js":"6","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js":"7","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js":"8","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js":"9","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js":"10","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js":"11","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js":"12","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js":"13","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js":"14","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js":"15","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js":"16","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js":"17","C:\\Programming\\revolution-text-game\\src\\index.js":"18","C:\\Programming\\revolution-text-game\\src\\App.js":"19","C:\\Programming\\revolution-text-game\\src\\data.js":"20","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js":"21","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js":"22","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js":"23","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js":"24","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js":"25","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js":"26","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js":"27","C:\\Programming\\revolution-text-game\\src\\reducer.js":"28","C:\\Programming\\revolution-text-game\\src\\periods.js":"29","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js":"30","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js":"31","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js":"32","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js":"33","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js":"34","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoModal.js":"35","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\ChooseSex.js":"36","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Timeline.js":"37","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Rules.js":"38"},{"size":197,"mtime":1622542163094,"results":"39","hashOfConfig":"40"},{"size":568,"mtime":1625170991523,"results":"41","hashOfConfig":"40"},{"size":157918,"mtime":1625233920935,"results":"42","hashOfConfig":"40"},{"size":2407,"mtime":1622619858785,"results":"43","hashOfConfig":"40"},{"size":372,"mtime":1622627194852,"results":"44","hashOfConfig":"40"},{"size":608,"mtime":1625171018511,"results":"45","hashOfConfig":"40"},{"size":8495,"mtime":1625170982188,"results":"46","hashOfConfig":"40"},{"size":4406,"mtime":1624717023143,"results":"47","hashOfConfig":"40"},{"size":1109,"mtime":1624717001034,"results":"48","hashOfConfig":"40"},{"size":492,"mtime":1624717000814,"results":"49","hashOfConfig":"40"},{"size":1031,"mtime":1624717000686,"results":"50","hashOfConfig":"40"},{"size":295,"mtime":1624717000143,"results":"51","hashOfConfig":"40"},{"size":284,"mtime":1624717000527,"results":"52","hashOfConfig":"40"},{"size":1234,"mtime":1625253501772,"results":"53","hashOfConfig":"40"},{"size":795,"mtime":1625235504649,"results":"54","hashOfConfig":"40"},{"size":4946,"mtime":1625310646523,"results":"55","hashOfConfig":"40"},{"size":226,"mtime":1625235328239,"results":"56","hashOfConfig":"40"},{"size":197,"mtime":1622542163094,"results":"57","hashOfConfig":"58"},{"size":568,"mtime":1625170991523,"results":"59","hashOfConfig":"58"},{"size":237017,"mtime":1638969404134,"results":"60","hashOfConfig":"58"},{"size":15870,"mtime":1639074014700,"results":"61","hashOfConfig":"58"},{"size":586,"mtime":1629127238725,"results":"62","hashOfConfig":"58"},{"size":1341,"mtime":1636534700838,"results":"63","hashOfConfig":"58"},{"size":1031,"mtime":1624717000686,"results":"64","hashOfConfig":"58"},{"size":284,"mtime":1624717000527,"results":"65","hashOfConfig":"58"},{"size":14290,"mtime":1639057498520,"results":"66","hashOfConfig":"58"},{"size":687,"mtime":1638170530986,"results":"67","hashOfConfig":"58"},{"size":2407,"mtime":1622619858785,"results":"68","hashOfConfig":"58"},{"size":372,"mtime":1638172571328,"results":"69","hashOfConfig":"58"},{"size":588,"mtime":1636288283291,"results":"70","hashOfConfig":"58"},{"size":1234,"mtime":1629127719389,"results":"71","hashOfConfig":"58"},{"size":795,"mtime":1625235504649,"results":"72","hashOfConfig":"58"},{"size":226,"mtime":1625235328239,"results":"73","hashOfConfig":"58"},{"size":4946,"mtime":1625310646523,"results":"74","hashOfConfig":"58"},{"size":235,"mtime":1635626823703,"results":"75","hashOfConfig":"58"},{"size":1942,"mtime":1635800754863,"results":"76","hashOfConfig":"58"},{"size":4242,"mtime":1639074403980,"results":"77","hashOfConfig":"58"},{"size":2531,"mtime":1638976426678,"results":"78","hashOfConfig":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"l6ohlv",{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1rf3bob",{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"119"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"119"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js",[],["165","166"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js",["167"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js",["168"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js",["169","170","171","172","173","174","175","176","177","178"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js",["179","180","181","182"],"import React from \"react\";\r\nimport { BsQuestion } from \"react-icons/bs\";\r\n\r\nconst Question = ({ question, nextClick, chooseDisplayedInfo }) => {\r\n  const checkInfosForOptions = (option) => {\r\n    if (!option.infos) return option.text;\r\n    let allId = option.infos.map((e) => e.id);\r\n    let allText = option.infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n    let parts = option.text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n    return parts;\r\n  };\r\n\r\n  const checkInfosForQuestion = (question) => {\r\n    if (!question[0].infos) return <h2>{question[0].text}</h2>;\r\n    let allId = question[0].infos.map((e) => e.id);\r\n    let allText = question[0].infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n    let parts = question[0].text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    console.log(parts);\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n    return <h2>{parts}</h2>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {question[0].imgRef !== \"\" && (\r\n        <div className=\"img-ref\">\r\n          <a href={question[0].imgRef}>источник</a>\r\n        </div>\r\n      )}\r\n      {/* <div className=\"id-testing\">current: {question[0].id}</div> */}{\" \"}\r\n      {/*testing */}\r\n      <div className=\"question\">{checkInfosForQuestion(question)}</div>\r\n      {question[0].options.length > 1 && (\r\n        <div className=\"options\">\r\n          <div className=\"option-container\">\r\n            {question[0].options.map((option) => {\r\n              if (\"nextJump\" in option) {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const nextJump = option.nextJump;\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    {/* <div className=\"next-option-testing\">\r\n                      nextJump: {option.nextJump}\r\n                    </div> */}\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          nextJump,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {checkInfosForOptions(option)}\r\n                    </button>\r\n                  </>\r\n                );\r\n              } else {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    {/* <div className=\"next-option-testing\">\r\n                      next: {option.next}\r\n                    </div> */}\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          0,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {checkInfosForOptions(option)}\r\n                    </button>\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js",["183","184"],"import React from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nconst CurrentInfo = ({\r\n  question,\r\n  setIsShowInfo,\r\n  INFOS,\r\n  currentInfoDisplayed,\r\n}) => {\r\n  return (\r\n    <div className=\"card\" id={question[0].id}>\r\n      <div className=\"close-info\">\r\n        <button\r\n          onClick={() => {\r\n            setIsShowInfo(false);\r\n            INFOS.map((INFO) => {\r\n              INFO.infos.map((info, infoIndex) => {\r\n                info.isActive = false;\r\n              });\r\n            });\r\n          }}\r\n        >\r\n          <i>\r\n            <AiOutlineClose />\r\n          </i>\r\n        </button>\r\n      </div>\r\n      <div className=\"current-info\">\r\n        <div className=\"infoName\">\r\n          <h2>{currentInfoDisplayed.infoName}</h2>\r\n        </div>\r\n        {/* <div className=\"img-container\">\r\n                  <img className=\"headImage\" src={placeholder} alt=\"img here\" />\r\n                </div> */}\r\n\r\n        <div className=\"info-text\">\r\n          <p>{currentInfoDisplayed.infoText}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentInfo;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js",["185"],"import React from \"react\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport { CgSpinner } from \"react-icons/cg\";\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <i>\r\n        <CgSpinner />\r\n      </i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js",[],"C:\\Programming\\revolution-text-game\\src\\index.js",[],["186","187"],"C:\\Programming\\revolution-text-game\\src\\App.js",["188"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport GamePage from \"./components/GamePage/GamePage\";\nimport AdminPage from \"./components/AdminPage/AdminPage\";\nimport data from \"./data\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/admin\">\n            <AdminPage questions={data} />\n          </Route>\n          <Route path=\"/\">\n            <GamePage questions={data} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Programming\\revolution-text-game\\src\\data.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js",["189","190","191","192","193","194","195","196","197","198","199","200"],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js",["201"],"import React, { useState } from \"react\";\r\nimport Editing from \"./EditingPage/editing\";\r\nimport \"../../styles/adminPage/adminPage.css\";\r\n\r\nconst AdminPage = ({ questions }) => {\r\n  const [passwordOK, setPasswordOK] = useState(true); //change to false --- JWT token\r\n  return (\r\n    <>\r\n      <div className=\"admin-page\">\r\n        {!passwordOK && (\r\n          <div className=\"authenticate-card\">\r\n            <h2>Admin authorization</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {passwordOK && <Editing questions={questions} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js",["202","203","204"],"import React from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nconst CurrentInfo = ({\r\n  question,\r\n  setIsShowInfo,\r\n  INFOS,\r\n  currentInfoDisplayed,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"blur\"></div>\r\n      <div className=\"modal\" id={question[0].id}>\r\n        <div className=\"current-info\">\r\n          <div className=\"rect1\"></div>\r\n          <div className=\"rect2\"></div>\r\n          <div className=\"rect3\"></div>\r\n          <div className=\"rect4\"></div>\r\n          <div className=\"info-name\">\r\n            <h2>{currentInfoDisplayed.infoName}</h2>\r\n          </div>\r\n          {/* <div className=\"img-container\">\r\n                  <img className=\"headImage\" src={placeholder} alt=\"img here\" />\r\n                </div> */}\r\n\r\n          <div className=\"info-text\">\r\n            <p>{currentInfoDisplayed.infoText}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"close-info\">\r\n          <button\r\n            onClick={() => {\r\n              setIsShowInfo(false);\r\n              INFOS.map((INFO) => {\r\n                INFO.infos.map((info, infoIndex) => {\r\n                  info.isActive = false;\r\n                });\r\n              });\r\n            }}\r\n          >\r\n            Понятно\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CurrentInfo;\r\n","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js",[],["205","206"],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js",["207"],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js",["208","209","210","211","212","213","214","215"],"import React from \"react\";\r\nimport { BsQuestion } from \"react-icons/bs\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LoseScreen from \"./LoseScreen\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { Fade, Transform } from \"react-animation-components\";\r\n\r\nconst Question = ({\r\n  question,\r\n  nextClick,\r\n  chooseDisplayedInfo,\r\n  isLoading,\r\n  setImgLoaded,\r\n  lose,\r\n}) => {\r\n  const [oneArrow, setOneArrow] = useState(false);\r\n  const [twoArrows, setTwoArrows] = useState(false);\r\n  const [zeroArrows, setZeroArrows] = useState(false);\r\n  const [makeSmallText, setMakeSmallText] = useState(false);\r\n\r\n  const checkInfosForOptions = (option) => {\r\n    if (!option.infos) {\r\n      let number = option.text[0];\r\n      const n = <div className=\"number\">{number}</div>;\r\n      var text = option.text.split(/.(.+)/)[1];\r\n      text = text.split(/.(.+)/)[1];\r\n      const header = text.split(/[.,,,:,;,!,?](.+)/);\r\n      const high = <div className=\"highlighted\">{header[0]}</div>;\r\n      const rest = header[1];\r\n      const all = (\r\n        <div className=\"header\">\r\n          {n}\r\n          {high}\r\n        </div>\r\n      );\r\n      const newText = [all, rest];\r\n      return <div className=\"text\">{newText}</div>;\r\n    }\r\n    let allId = option.infos.map((e) => e.id);\r\n    let allText = option.infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n\r\n    const separateParts = (text) => {\r\n      const number = text[0];\r\n      const n = <div className=\"number\">{number}</div>; //NUMBER\r\n      let allButNumber = text.split(/.(.+)/)[1];\r\n      allButNumber = allButNumber.split(/.(.+)/)[1];\r\n      let header = allButNumber.split(/[.,,,:,;,!,?](.+)/)[0]; //HEADER\r\n      let theRest = allButNumber.split(/[.,,,:,;,!,?](.+)/)[1]; //REST\r\n      let checkHeader = header.split(new RegExp(`(${allText.join(\"|\")})`));\r\n      let checkRest;\r\n      if (theRest !== undefined) {\r\n        checkRest = theRest.split(new RegExp(`(${allText.join(\"|\")})`));\r\n      } else {\r\n        checkRest = [];\r\n      }\r\n\r\n      //    IF LINK IN HEADER\r\n      if (checkHeader.length > 2) {\r\n        for (let i = 1; i < checkHeader.length; i += 2) {\r\n          checkHeader[i] = l(checkHeader, i);\r\n        }\r\n\r\n        let firstPart = (\r\n          <div className=\"highlighted\">\r\n            {[checkHeader[0], checkHeader[1], checkHeader[2]]}\r\n          </div>\r\n        );\r\n        const all = (\r\n          <div className=\"header\">\r\n            {n}\r\n            {firstPart}\r\n          </div>\r\n        );\r\n        if (theRest !== undefined) {\r\n          checkHeader.push(theRest);\r\n        }\r\n        let final = [all, checkHeader[checkHeader.length - 1]];\r\n        return [final];\r\n      }\r\n      if (checkRest.length > 2) {\r\n        for (let i = 1; i < checkRest.length; i += 2) {\r\n          checkRest[i] = l(checkRest, i);\r\n        }\r\n        let firstPart = <div className=\"highlighted\">{checkHeader[0]}</div>;\r\n        const all = (\r\n          <div className=\"header\">\r\n            {n}\r\n            {firstPart}\r\n          </div>\r\n        );\r\n        let final = [all, checkRest];\r\n        return [final];\r\n      }\r\n    };\r\n\r\n    let parts = option.text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n\r\n    const separatedText = separateParts(option.text);\r\n    return <div className=\"text\">{separatedText}</div>;\r\n  };\r\n\r\n  const checkInfosForQuestion = (question) => {\r\n    if (!question[0].infos) return <h2>{question[0].text}</h2>;\r\n    let allId = question[0].infos.map((e) => e.id);\r\n    let allText = question[0].infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n    let parts = question[0].text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n    return <h2>{parts}</h2>;\r\n  };\r\n\r\n  const isOverflown = ({\r\n    clientWidth,\r\n    clientHeight,\r\n    scrollWidth,\r\n    scrollHeight,\r\n  }) => {\r\n    return scrollHeight > clientHeight || scrollWidth > clientWidth;\r\n  };\r\n\r\n  const heightIsOverNpx = ({ clientHeight }, number) => {\r\n    return clientHeight >= number;\r\n  };\r\n\r\n  const determineArrowsNumber = () => {\r\n    const main = document.getElementsByClassName(\"main\")[0];\r\n    const viewportHeight =\r\n      document.getElementsByTagName(\"body\")[0].clientHeight;\r\n    const overflowMain = isOverflown(main);\r\n    const questionText = document.getElementsByClassName(\"question-text\")[0];\r\n    const heightOver200 = heightIsOverNpx(questionText, 200);\r\n    const heightOver100 = heightIsOverNpx(questionText, 100);\r\n    if (overflowMain) {\r\n      heightOver200 ? setZeroArrows(true) : setOneArrow(true);\r\n    } else if (heightOver200) {\r\n      setZeroArrows(true);\r\n    } else {\r\n      viewportHeight <= 1000 && heightOver100\r\n        ? setOneArrow(true)\r\n        : setTwoArrows(true);\r\n    }\r\n  };\r\n\r\n  const determineTextSmall = () => {\r\n    const questionText = document.getElementsByClassName(\"question-text\")[0];\r\n    if (heightIsOverNpx(questionText, 700)) {\r\n      setMakeSmallText(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    determineArrowsNumber();\r\n    determineTextSmall();\r\n  }, [question]);\r\n\r\n  return (\r\n    <>\r\n      {/* <TransitionGroup component={null}>\r\n        <CSSTransition\r\n          in={!isLoading}\r\n          key={question[0].id}\r\n          timeout={500}\r\n          classNames=\"alert\"\r\n        > */}\r\n      <>\r\n        {/* <div className=\"id-testing\">current: {question[0].id}</div> */}{\" \"}\r\n        {/*testing */}\r\n        {question[0].options.length === 1 && (\r\n          <div className=\"arrows\">\r\n            {!zeroArrows && oneArrow && (\r\n              <svg\r\n                className=\"arrow\"\r\n                width=\"87\"\r\n                height=\"157\"\r\n                viewBox=\"0 0 87 157\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                  d=\"M85.1192 93.312C86.2457 94.1102 86.5118 95.6706 85.7135 96.7972L44.3733 155.138C43.8986 155.808 43.1253 156.202 42.3044 156.192C41.4835 156.183 40.7196 155.771 40.2606 155.09L0.927173 96.7493C0.15533 95.6045 0.457683 94.0507 1.60251 93.2789C2.74733 92.507 4.3011 92.8094 5.07295 93.9542L39.8335 145.512L39.8335 3C39.8335 1.61929 40.9528 0.499998 42.3335 0.499998C43.7142 0.499998 44.8335 1.61929 44.8335 3L44.8335 145.84L81.6339 93.9064C82.4322 92.7798 83.9926 92.5137 85.1192 93.312Z\"\r\n                  fill=\"#FF2400\"\r\n                />\r\n              </svg>\r\n            )}\r\n            {!zeroArrows && twoArrows && (\r\n              <>\r\n                <svg\r\n                  className=\"arrow\"\r\n                  width=\"87\"\r\n                  height=\"157\"\r\n                  viewBox=\"0 0 87 157\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M85.1192 93.312C86.2457 94.1102 86.5118 95.6706 85.7135 96.7972L44.3733 155.138C43.8986 155.808 43.1253 156.202 42.3044 156.192C41.4835 156.183 40.7196 155.771 40.2606 155.09L0.927173 96.7493C0.15533 95.6045 0.457683 94.0507 1.60251 93.2789C2.74733 92.507 4.3011 92.8094 5.07295 93.9542L39.8335 145.512L39.8335 3C39.8335 1.61929 40.9528 0.499998 42.3335 0.499998C43.7142 0.499998 44.8335 1.61929 44.8335 3L44.8335 145.84L81.6339 93.9064C82.4322 92.7798 83.9926 92.5137 85.1192 93.312Z\"\r\n                    fill=\"#FF2400\"\r\n                  />\r\n                </svg>\r\n                <svg\r\n                  className=\"arrow\"\r\n                  width=\"87\"\r\n                  height=\"157\"\r\n                  viewBox=\"0 0 87 157\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M85.1192 93.312C86.2457 94.1102 86.5118 95.6706 85.7135 96.7972L44.3733 155.138C43.8986 155.808 43.1253 156.202 42.3044 156.192C41.4835 156.183 40.7196 155.771 40.2606 155.09L0.927173 96.7493C0.15533 95.6045 0.457683 94.0507 1.60251 93.2789C2.74733 92.507 4.3011 92.8094 5.07295 93.9542L39.8335 145.512L39.8335 3C39.8335 1.61929 40.9528 0.499998 42.3335 0.499998C43.7142 0.499998 44.8335 1.61929 44.8335 3L44.8335 145.84L81.6339 93.9064C82.4322 92.7798 83.9926 92.5137 85.1192 93.312Z\"\r\n                    fill=\"#FF2400\"\r\n                  />\r\n                </svg>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className={`question-text ${makeSmallText ? \" small-text\" : \"\"}`}>\r\n          {checkInfosForQuestion(question)}\r\n        </div>\r\n        {question[0].options.length > 1 && (\r\n          <>\r\n            <div className=\"options\">\r\n              <div className=\"option-container\">\r\n                {question[0].options.map((option) => {\r\n                  if (\"nextJump\" in option) {\r\n                    if (\"jumpFromHere\" in option) {\r\n                      var jumpFromHere =\r\n                        localStorage.getItem(\"jump-from-here\") ||\r\n                        option.jumpFromHere;\r\n                      //   localStorage.setItem(\r\n                      //     \"jump-from-here\",\r\n                      //     JSON.stringify(jumpFromHere)\r\n                      //   );\r\n                    }\r\n                    const nextJump =\r\n                      parseInt(localStorage.getItem(\"next-jump\")) ||\r\n                      option.nextJump;\r\n                    // localStorage.setItem(\"next-jump\", JSON.stringify(nextJump));\r\n                    const next = option.next;\r\n                    return (\r\n                      <>\r\n                        {/*testing*/}\r\n                        {/* <div className=\"next-option-testing\">\r\n                      nextJump: {option.nextJump}\r\n                    </div> */}\r\n                        <button\r\n                          className={`option ${\r\n                            option.isActive ? \"active\" : \"\"\r\n                          }`}\r\n                          key={option.id}\r\n                          onClick={() =>\r\n                            nextClick(\r\n                              option.id,\r\n                              option.isActive,\r\n                              next,\r\n                              nextJump,\r\n                              jumpFromHere\r\n                            )\r\n                          }\r\n                        >\r\n                          {checkInfosForOptions(option)}\r\n                          {\"img\" in option ? (\r\n                            <img\r\n                              className=\"option-img\"\r\n                              src={\r\n                                process.env.PUBLIC_URL + `/images/${option.img}`\r\n                              }\r\n                              style={!isLoading ? {} : { display: \"none\" }}\r\n                              alt=\"img here\"\r\n                              onLoad={() => setImgLoaded(true)}\r\n                            />\r\n                          ) : null}\r\n                        </button>\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    if (\"jumpFromHere\" in option) {\r\n                      jumpFromHere =\r\n                        localStorage.getItem(\"jump-from-here\") ||\r\n                        option.jumpFromHere;\r\n                      localStorage.setItem(\r\n                        \"jump-from-here\",\r\n                        JSON.stringify(jumpFromHere)\r\n                      );\r\n                    }\r\n                    const next = option.next;\r\n                    return (\r\n                      <>\r\n                        {/*testing*/}\r\n                        {/* <div className=\"next-option-testing\">\r\n                      next: {option.next}\r\n                    </div> */}\r\n                        <button\r\n                          className={`option ${\r\n                            option.isActive ? \"active\" : \"\"\r\n                          }`}\r\n                          key={option.id}\r\n                          onClick={() =>\r\n                            nextClick(\r\n                              option.id,\r\n                              option.isActive,\r\n                              next,\r\n                              0,\r\n                              jumpFromHere\r\n                            )\r\n                          }\r\n                        >\r\n                          {checkInfosForOptions(option)}\r\n                          {\"img\" in option ? (\r\n                            <img\r\n                              className=\"option-img\"\r\n                              src={\r\n                                process.env.PUBLIC_URL + `/images/${option.img}`\r\n                              }\r\n                              style={!isLoading ? {} : { display: \"none\" }}\r\n                              alt=\"img here\"\r\n                              onLoad={() => setImgLoaded(true)}\r\n                            />\r\n                          ) : null}\r\n                        </button>\r\n                      </>\r\n                    );\r\n                  }\r\n                })}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        {lose && <LoseScreen question={question} />}\r\n        {question[0].options.length === 1 && (\r\n          <div className=\"down-line\">\r\n            <hr />\r\n          </div>\r\n        )}\r\n      </>\r\n      {/* </CSSTransition>\r\n      </TransitionGroup> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js",[],"C:\\Programming\\revolution-text-game\\src\\reducer.js",[],"C:\\Programming\\revolution-text-game\\src\\periods.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoModal.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\ChooseSex.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Timeline.js",["216","217","218","219"],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Rules.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":2,"column":50,"nodeType":"226","messageId":"227","endLine":2,"endColumn":54},{"ruleId":"224","severity":1,"message":"228","line":6,"column":22,"nodeType":"226","messageId":"227","endLine":6,"endColumn":35},{"ruleId":"224","severity":1,"message":"229","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":27},{"ruleId":"224","severity":1,"message":"230","line":2,"column":31,"nodeType":"226","messageId":"227","endLine":2,"endColumn":37},{"ruleId":"224","severity":1,"message":"231","line":3,"column":35,"nodeType":"226","messageId":"227","endLine":3,"endColumn":41},{"ruleId":"224","severity":1,"message":"232","line":3,"column":43,"nodeType":"226","messageId":"227","endLine":3,"endColumn":48},{"ruleId":"224","severity":1,"message":"225","line":3,"column":50,"nodeType":"226","messageId":"227","endLine":3,"endColumn":54},{"ruleId":"224","severity":1,"message":"233","line":11,"column":10,"nodeType":"226","messageId":"227","endLine":11,"endColumn":22},{"ruleId":"224","severity":1,"message":"234","line":25,"column":10,"nodeType":"226","messageId":"227","endLine":25,"endColumn":24},{"ruleId":"224","severity":1,"message":"235","line":29,"column":17,"nodeType":"226","messageId":"227","endLine":29,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":98,"column":6,"nodeType":"238","endLine":98,"endColumn":16,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"240","line":109,"column":6,"nodeType":"238","endLine":109,"endColumn":23,"suggestions":"241"},{"ruleId":"224","severity":1,"message":"242","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":20},{"ruleId":"243","severity":1,"message":"244","line":13,"column":9,"nodeType":"245","endLine":18,"endColumn":10},{"ruleId":"243","severity":1,"message":"244","line":38,"column":9,"nodeType":"245","endLine":43,"endColumn":10},{"ruleId":"246","severity":1,"message":"247","line":101,"column":23,"nodeType":"226","messageId":"248","endLine":101,"endColumn":35},{"ruleId":"249","severity":1,"message":"250","line":16,"column":30,"nodeType":"251","messageId":"252","endLine":16,"endColumn":32},{"ruleId":"249","severity":1,"message":"250","line":17,"column":48,"nodeType":"251","messageId":"252","endLine":17,"endColumn":50},{"ruleId":"224","severity":1,"message":"253","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":19},{"ruleId":"220","replacedBy":"254"},{"ruleId":"222","replacedBy":"255"},{"ruleId":"224","severity":1,"message":"225","line":2,"column":50,"nodeType":"226","messageId":"227","endLine":2,"endColumn":54},{"ruleId":"224","severity":1,"message":"231","line":3,"column":35,"nodeType":"226","messageId":"227","endLine":3,"endColumn":41},{"ruleId":"224","severity":1,"message":"232","line":3,"column":43,"nodeType":"226","messageId":"227","endLine":3,"endColumn":48},{"ruleId":"224","severity":1,"message":"225","line":3,"column":50,"nodeType":"226","messageId":"227","endLine":3,"endColumn":54},{"ruleId":"224","severity":1,"message":"256","line":5,"column":25,"nodeType":"226","messageId":"227","endLine":5,"endColumn":40},{"ruleId":"224","severity":1,"message":"257","line":6,"column":10,"nodeType":"226","messageId":"227","endLine":6,"endColumn":14},{"ruleId":"224","severity":1,"message":"258","line":6,"column":16,"nodeType":"226","messageId":"227","endLine":6,"endColumn":25},{"ruleId":"224","severity":1,"message":"259","line":13,"column":8,"nodeType":"226","messageId":"227","endLine":13,"endColumn":18},{"ruleId":"224","severity":1,"message":"260","line":40,"column":9,"nodeType":"226","messageId":"227","endLine":40,"endColumn":20},{"ruleId":"224","severity":1,"message":"261","line":43,"column":12,"nodeType":"226","messageId":"227","endLine":43,"endColumn":17},{"ruleId":"224","severity":1,"message":"262","line":87,"column":15,"nodeType":"226","messageId":"227","endLine":87,"endColumn":19},{"ruleId":"236","severity":1,"message":"263","line":105,"column":6,"nodeType":"238","endLine":105,"endColumn":16,"suggestions":"264"},{"ruleId":"236","severity":1,"message":"265","line":119,"column":6,"nodeType":"238","endLine":119,"endColumn":23,"suggestions":"266"},{"ruleId":"224","severity":1,"message":"228","line":6,"column":22,"nodeType":"226","messageId":"227","endLine":6,"endColumn":35},{"ruleId":"224","severity":1,"message":"267","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":34,"column":32,"nodeType":"251","messageId":"252","endLine":34,"endColumn":34},{"ruleId":"249","severity":1,"message":"250","line":35,"column":50,"nodeType":"251","messageId":"252","endLine":35,"endColumn":52},{"ruleId":"220","replacedBy":"268"},{"ruleId":"222","replacedBy":"269"},{"ruleId":"224","severity":1,"message":"253","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":19},{"ruleId":"224","severity":1,"message":"242","line":2,"column":10,"nodeType":"226","messageId":"227","endLine":2,"endColumn":20},{"ruleId":"224","severity":1,"message":"270","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":23},{"ruleId":"224","severity":1,"message":"256","line":5,"column":25,"nodeType":"226","messageId":"227","endLine":5,"endColumn":40},{"ruleId":"224","severity":1,"message":"257","line":6,"column":10,"nodeType":"226","messageId":"227","endLine":6,"endColumn":14},{"ruleId":"224","severity":1,"message":"258","line":6,"column":16,"nodeType":"226","messageId":"227","endLine":6,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":45,"column":9,"nodeType":"245","endLine":50,"endColumn":10},{"ruleId":"243","severity":1,"message":"244","line":127,"column":9,"nodeType":"245","endLine":132,"endColumn":10},{"ruleId":"236","severity":1,"message":"271","line":186,"column":6,"nodeType":"238","endLine":186,"endColumn":16,"suggestions":"272"},{"ruleId":"224","severity":1,"message":"273","line":6,"column":8,"nodeType":"226","messageId":"227","endLine":6,"endColumn":22},{"ruleId":"224","severity":1,"message":"270","line":7,"column":10,"nodeType":"226","messageId":"227","endLine":7,"endColumn":23},{"ruleId":"224","severity":1,"message":"256","line":7,"column":25,"nodeType":"226","messageId":"227","endLine":7,"endColumn":40},{"ruleId":"236","severity":1,"message":"274","line":100,"column":6,"nodeType":"238","endLine":100,"endColumn":32,"suggestions":"275"},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setPasswordOK' is assigned a value but never used.","'useReducer' is defined but never used.","'useRef' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'INFOSReducer' is defined but never used.","'isShowQuestion' is assigned a value but never used.","'setGrade' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkOptions'. Either include it or remove the dependency array.","ArrayExpression",["278"],"React Hook useEffect has missing dependencies: 'addINFO', 'question', and 'setShowQuestionSatus'. Either include them or remove the dependency array.",["279"],"'BsQuestion' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'jumpFromHere' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FaSpinner' is defined but never used.",["276"],["277"],"'TransitionGroup' is defined but never used.","'Fade' is defined but never used.","'Transform' is defined but never used.","'LoseScreen' is defined but never used.","'forceUpdate' is assigned a value but never used.","'state' is assigned a value but never used.","'time' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkOptions' and 'jump'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'addINFO' and 'question'. Either include them or remove the dependency array.",["281"],"'AiOutlineClose' is defined but never used.",["276"],["277"],"'CSSTransition' is defined but never used.","React Hook useEffect has missing dependencies: 'determineArrowsNumber' and 'determineTextSmall'. Either include them or remove the dependency array.",["282"],"'ReactDOMServer' is defined but never used.","React Hook useEffect has a missing dependency: 'addNewPeriod'. Either include it or remove the dependency array.",["283"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},"Update the dependencies array to be: [checkOptions, question]",{"range":"296","text":"297"},"Update the dependencies array to be: [addINFO, question, questionCounter, setShowQuestionSatus]",{"range":"298","text":"299"},"Update the dependencies array to be: [checkOptions, jump, question]",{"range":"300","text":"301"},"Update the dependencies array to be: [addINFO, question, questionCounter]",{"range":"302","text":"303"},"Update the dependencies array to be: [determineArrowsNumber, determineTextSmall, question]",{"range":"304","text":"305"},"Update the dependencies array to be: [questionCounter, counter, addNewPeriod]",{"range":"306","text":"307"},[3265,3275],"[checkOptions, question]",[3484,3501],"[addINFO, question, questionCounter, setShowQuestionSatus]",[3547,3557],"[checkOptions, jump, question]",[3921,3938],"[addINFO, question, questionCounter]",[5735,5745],"[determineArrowsNumber, determineTextSmall, question]",[3243,3269],"[questionCounter, counter, addNewPeriod]"]