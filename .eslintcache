[{"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js":"1","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js":"2","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js":"3","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js":"4","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js":"5","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js":"6","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js":"7","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js":"8","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js":"9","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js":"10","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js":"11","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js":"12","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js":"13","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js":"14","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js":"15","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js":"16","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js":"17","C:\\Programming\\revolution-text-game\\src\\index.js":"18","C:\\Programming\\revolution-text-game\\src\\App.js":"19","C:\\Programming\\revolution-text-game\\src\\data.js":"20","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js":"21","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js":"22","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js":"23","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js":"24","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js":"25","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js":"26","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js":"27","C:\\Programming\\revolution-text-game\\src\\reducer.js":"28","C:\\Programming\\revolution-text-game\\src\\periods.js":"29","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js":"30","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js":"31","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js":"32","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js":"33","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js":"34"},{"size":197,"mtime":1622542163094,"results":"35","hashOfConfig":"36"},{"size":568,"mtime":1625170991523,"results":"37","hashOfConfig":"36"},{"size":157918,"mtime":1625233920935,"results":"38","hashOfConfig":"36"},{"size":2407,"mtime":1622619858785,"results":"39","hashOfConfig":"36"},{"size":372,"mtime":1622627194852,"results":"40","hashOfConfig":"36"},{"size":608,"mtime":1625171018511,"results":"41","hashOfConfig":"36"},{"size":8495,"mtime":1625170982188,"results":"42","hashOfConfig":"36"},{"size":4406,"mtime":1624717023143,"results":"43","hashOfConfig":"36"},{"size":1109,"mtime":1624717001034,"results":"44","hashOfConfig":"36"},{"size":492,"mtime":1624717000814,"results":"45","hashOfConfig":"36"},{"size":1031,"mtime":1624717000686,"results":"46","hashOfConfig":"36"},{"size":295,"mtime":1624717000143,"results":"47","hashOfConfig":"36"},{"size":284,"mtime":1624717000527,"results":"48","hashOfConfig":"36"},{"size":1234,"mtime":1625253501772,"results":"49","hashOfConfig":"36"},{"size":795,"mtime":1625235504649,"results":"50","hashOfConfig":"36"},{"size":4946,"mtime":1625310646523,"results":"51","hashOfConfig":"36"},{"size":226,"mtime":1625235328239,"results":"52","hashOfConfig":"36"},{"size":197,"mtime":1622542163094,"results":"53","hashOfConfig":"54"},{"size":568,"mtime":1625170991523,"results":"55","hashOfConfig":"54"},{"size":195596,"mtime":1635357676753,"results":"56","hashOfConfig":"54"},{"size":8495,"mtime":1625170982188,"results":"57","hashOfConfig":"54"},{"size":586,"mtime":1629127238725,"results":"58","hashOfConfig":"54"},{"size":1109,"mtime":1624717001034,"results":"59","hashOfConfig":"54"},{"size":1031,"mtime":1624717000686,"results":"60","hashOfConfig":"54"},{"size":284,"mtime":1624717000527,"results":"61","hashOfConfig":"54"},{"size":4406,"mtime":1624717023143,"results":"62","hashOfConfig":"54"},{"size":492,"mtime":1624717000814,"results":"63","hashOfConfig":"54"},{"size":2407,"mtime":1622619858785,"results":"64","hashOfConfig":"54"},{"size":372,"mtime":1622627194852,"results":"65","hashOfConfig":"54"},{"size":295,"mtime":1624717000143,"results":"66","hashOfConfig":"54"},{"size":1234,"mtime":1629127719389,"results":"67","hashOfConfig":"54"},{"size":795,"mtime":1625235504649,"results":"68","hashOfConfig":"54"},{"size":226,"mtime":1625235328239,"results":"69","hashOfConfig":"54"},{"size":4946,"mtime":1625310646523,"results":"70","hashOfConfig":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"l6ohlv",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"1rf3bob",{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"111"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"111"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"111"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"111"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"111"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"111"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\index.js",[],["147","148"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\App.js",["149"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\data.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\reducer.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\periods.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js",["150"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js",["151","152","153","154","155","156","157","158","159","160"],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js",["161","162","163","164"],"import React from \"react\";\r\nimport { BsQuestion } from \"react-icons/bs\";\r\n\r\nconst Question = ({ question, nextClick, chooseDisplayedInfo }) => {\r\n  const checkInfosForOptions = (option) => {\r\n    if (!option.infos) return option.text;\r\n    let allId = option.infos.map((e) => e.id);\r\n    let allText = option.infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n    let parts = option.text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n    return parts;\r\n  };\r\n\r\n  const checkInfosForQuestion = (question) => {\r\n    if (!question[0].infos) return <h2>{question[0].text}</h2>;\r\n    let allId = question[0].infos.map((e) => e.id);\r\n    let allText = question[0].infos.map((e) => e.altText);\r\n\r\n    const l = (parts, i) => {\r\n      //для верной передачи цифр\r\n      return (\r\n        <a\r\n          className=\"info-link\"\r\n          onClick={() => {\r\n            chooseDisplayedInfo(allId[Math.floor(i / 2)]);\r\n          }}\r\n        >\r\n          {parts[i]}\r\n        </a>\r\n      );\r\n    };\r\n    let parts = question[0].text.split(new RegExp(`(${allText.join(\"|\")})`));\r\n    console.log(parts);\r\n    for (let i = 1; i < parts.length; i += 2) {\r\n      parts[i] = l(parts, i);\r\n    }\r\n    return <h2>{parts}</h2>;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {question[0].imgRef !== \"\" && (\r\n        <div className=\"img-ref\">\r\n          <a href={question[0].imgRef}>источник</a>\r\n        </div>\r\n      )}\r\n      {/* <div className=\"id-testing\">current: {question[0].id}</div> */}{\" \"}\r\n      {/*testing */}\r\n      <div className=\"question\">{checkInfosForQuestion(question)}</div>\r\n      {question[0].options.length > 1 && (\r\n        <div className=\"options\">\r\n          <div className=\"option-container\">\r\n            {question[0].options.map((option) => {\r\n              if (\"nextJump\" in option) {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const nextJump = option.nextJump;\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    {/* <div className=\"next-option-testing\">\r\n                      nextJump: {option.nextJump}\r\n                    </div> */}\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          nextJump,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {checkInfosForOptions(option)}\r\n                    </button>\r\n                  </>\r\n                );\r\n              } else {\r\n                if (\"jumpFromHere\" in option) {\r\n                  var jumpFromHere = option.jumpFromHere;\r\n                }\r\n                const next = option.next;\r\n                return (\r\n                  <>\r\n                    {/*testing*/}\r\n                    {/* <div className=\"next-option-testing\">\r\n                      next: {option.next}\r\n                    </div> */}\r\n                    <button\r\n                      className={`option ${option.isActive ? \"active\" : \"\"}`}\r\n                      key={option.id}\r\n                      onClick={() =>\r\n                        nextClick(\r\n                          option.id,\r\n                          option.isActive,\r\n                          next,\r\n                          0,\r\n                          jumpFromHere\r\n                        )\r\n                      }\r\n                    >\r\n                      {checkInfosForOptions(option)}\r\n                    </button>\r\n                  </>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js",["165","166"],"import React from \"react\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nconst CurrentInfo = ({\r\n  question,\r\n  setIsShowInfo,\r\n  INFOS,\r\n  currentInfoDisplayed,\r\n}) => {\r\n  return (\r\n    <div className=\"card\" id={question[0].id}>\r\n      <div className=\"close-info\">\r\n        <button\r\n          onClick={() => {\r\n            setIsShowInfo(false);\r\n            INFOS.map((INFO) => {\r\n              INFO.infos.map((info, infoIndex) => {\r\n                info.isActive = false;\r\n              });\r\n            });\r\n          }}\r\n        >\r\n          <i>\r\n            <AiOutlineClose />\r\n          </i>\r\n        </button>\r\n      </div>\r\n      <div className=\"current-info\">\r\n        <div className=\"infoName\">\r\n          <h2>{currentInfoDisplayed.infoName}</h2>\r\n        </div>\r\n        {/* <div className=\"img-container\">\r\n                  <img className=\"headImage\" src={placeholder} alt=\"img here\" />\r\n                </div> */}\r\n\r\n        <div className=\"info-text\">\r\n          <p>{currentInfoDisplayed.infoText}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentInfo;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js",["167"],"import React from \"react\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\nimport { CgSpinner } from \"react-icons/cg\";\r\n\r\nfunction Loading(props) {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <i>\r\n        <CgSpinner />\r\n      </i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js",[],"C:\\Dasha's Files\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js",[],"C:\\Programming\\revolution-text-game\\src\\index.js",[],["168","169"],"C:\\Programming\\revolution-text-game\\src\\App.js",["170"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport GamePage from \"./components/GamePage/GamePage\";\nimport AdminPage from \"./components/AdminPage/AdminPage\";\nimport data from \"./data\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/admin\">\n            <AdminPage questions={data} />\n          </Route>\n          <Route path=\"/\">\n            <GamePage questions={data} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Programming\\revolution-text-game\\src\\data.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\GamePage.js",["171","172","173","174","175","176","177","178","179","180"],"import React, { useReducer } from \"react\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"../../styles/main/style.css\";\r\nimport periods from \"../../periods\";\r\nimport Question from \"./Question\";\r\nimport Image from \"./Image\";\r\nimport CurrentInfo from \"./CurrentInfo\";\r\nimport InfoColumn from \"./InfoColumn\";\r\nimport Loading from \"./Loading\";\r\nimport { INFOSReducer } from \"../../reducer\";\r\nimport LoseScreen from \"./LoseScreen\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\n\r\nfunction GamePage({ questions }) {\r\n  const [index, setIndex] = useState(1000);\r\n  const [question, setQuestion] = useState(questions);\r\n  const [questionChanged, setQuestionChanged] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isShowInfo, setIsShowInfo] = useState(false);\r\n  const [INFOS, setINFOS] = useState(periods);\r\n  const [questionCounter, setQuestionCounter] = useState(1);\r\n  const [isJump, setIsJump] = useState(false);\r\n  const [jump, setJump] = useState(0);\r\n  const [isShowQuestion, setIsShowQuestion] = useState(true);\r\n  const [imgLoaded, setImgLoaded] = useState(false);\r\n  const [currentInfoDisplayed, setCurrentInfoDisplayed] = useState();\r\n  const [lose, setLose] = useState(false);\r\n  const [grade, setGrade] = useState(3);\r\n\r\n  const addInfoHelper = (singleInfo) => {\r\n    const i = INFOS.findIndex(\r\n      (infoObj) => infoObj.period === question[0].period\r\n    );\r\n    console.log(\"index in INFOS:\", i);\r\n    INFOS.forEach((INFO) => {\r\n      INFO.isShowEntries = false;\r\n    });\r\n    const newINFO = {\r\n      infoId: singleInfo.id,\r\n      infoName: singleInfo.name,\r\n      infoText: singleInfo.text,\r\n      isActive: false,\r\n    };\r\n    var infosArray = INFOS[i].infos;\r\n    infosArray.push(newINFO);\r\n    const newObj = { ...INFOS[i], infos: infosArray, isShowEntries: true };\r\n    const newArray = INFOS;\r\n    newArray[i] = newObj;\r\n    setINFOS(newArray);\r\n\r\n    console.log(INFOS, \"added into existed obj\");\r\n  };\r\n\r\n  const addINFO = () => {\r\n    if (\"infos\" in question[0]) {\r\n      question[0].infos.forEach((singleInfo) => {\r\n        addInfoHelper(singleInfo);\r\n      });\r\n    }\r\n    question[0].options.forEach((option) => {\r\n      if (\"infos\" in option) {\r\n        option.infos.forEach((singleInfo) => {\r\n          addInfoHelper(singleInfo);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const setIsShowInfoEntries = (periodId) => {\r\n    const i = INFOS.findIndex((period) => period.id === periodId);\r\n    const newArray = [...INFOS];\r\n    const cloneObj = newArray[i];\r\n    const show = cloneObj.isShowEntries;\r\n    const newObj = { ...cloneObj, isShowEntries: !show };\r\n    newArray[i] = newObj;\r\n    setINFOS(newArray);\r\n    INFOS.forEach((INFO) => {\r\n      INFO.isShowEntries = false;\r\n    });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!isShowInfo) {\r\n      if (index !== question[0].id) {\r\n        setQuestionCounter(questionCounter + 1);\r\n        setQuestionChanged(true);\r\n        setQuestion(questions.filter((item) => item.id === index));\r\n        setQuestionChanged(false);\r\n        setIsLoading(true);\r\n        setImgLoaded(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkOptions();\r\n  }, [question]);\r\n\r\n  useEffect(() => {\r\n    addINFO();\r\n    setShowQuestionSatus();\r\n    if (question[0].img === \"\") {\r\n      setImgLoaded(true);\r\n    }\r\n    if (\"lose\" in question[0]) {\r\n      setLose(true);\r\n    }\r\n  }, [questionCounter]);\r\n\r\n  useEffect(() => {\r\n    const time = setTimeout(() => {\r\n      if (imgLoaded) {\r\n        setIsLoading(false);\r\n      }\r\n    }, 300);\r\n    return () => clearTimeout(time);\r\n  }, [imgLoaded]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"array changed, new length:\", INFOS.length);\r\n  }, [INFOS]);\r\n\r\n  const nextClick = (id, isActive, next, nextJump, jumpFromHere) => {\r\n    if (nextJump !== 0) {\r\n      setJump(nextJump);\r\n    }\r\n    if (jumpFromHere) setIsJump(true);\r\n    setIndex(next);\r\n\r\n    //change active option\r\n    const i = question[0].options.findIndex((option) => option.id === id);\r\n    const clone = [...question[0].options];\r\n    clone[i] = { ...clone[i], isActive: true };\r\n    const objClone = [...question];\r\n    objClone[0] = { ...question[0], options: clone };\r\n\r\n    setQuestion(objClone);\r\n    question[0].options.forEach((option) => {\r\n      option.isActive = false;\r\n    });\r\n  };\r\n\r\n  const chooseDisplayedInfo = (infoId) => {\r\n    //check active info\r\n    INFOS.forEach((INFO, INFOindex) => {\r\n      const i = INFO.infos.findIndex((info) => info.infoId === infoId);\r\n      if (i !== -1) {\r\n        INFO.infos.forEach((info, infoIndex) => {\r\n          const arrayInfos = [...INFO.infos];\r\n          arrayInfos[i] = { ...arrayInfos[i], isActive: true };\r\n          setCurrentInfoDisplayed(arrayInfos[i]);\r\n          setIsShowInfo(true);\r\n          const INFOArrCLone = [...INFOS];\r\n          INFOArrCLone[INFOindex] = {\r\n            ...INFOArrCLone[INFOindex],\r\n            infos: arrayInfos,\r\n          };\r\n          setINFOS(INFOArrCLone);\r\n        });\r\n      }\r\n      INFO.infos.forEach((info) => {\r\n        info.isActive = false;\r\n      });\r\n    });\r\n  };\r\n\r\n  //check if there's more than one option = it's a question, otherwise =it's an announcement\r\n  const checkOptions = () => {\r\n    if (question[0].options.length === 1) {\r\n      if (isJump) {\r\n        setIndex(jump);\r\n        console.log(jump);\r\n        setIsJump(false);\r\n      } else if (\"jumpFromHere\" in question[0].options[0]) {\r\n        setIsJump(true);\r\n        setIndex(question[0].options[0].next);\r\n      } else {\r\n        setIndex(question[0].options[0].next);\r\n      }\r\n      // ADD if length === 0 : endgame (maybe)\r\n    }\r\n  };\r\n\r\n  const setShowQuestionSatus = () => {\r\n    if (!isLoading) {\r\n      setIsShowQuestion(true);\r\n    } else {\r\n      setIsShowQuestion(false);\r\n    }\r\n    setIsLoading(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div className=\"game-page\">\r\n          <div className=\"wrapper\">\r\n            {questionChanged && <h1>Loading...</h1>}\r\n\r\n            {/* CARD */}\r\n            <>\r\n              <div className=\"container\">\r\n                <div className=\"info-entries\">\r\n                  {\" \"}\r\n                  {/*whole left column*/}\r\n                  {INFOS.map((period) => {\r\n                    return (\r\n                      <InfoColumn\r\n                        period={period}\r\n                        setIsShowInfoEntries={setIsShowInfoEntries}\r\n                        chooseDisplayedInfo={chooseDisplayedInfo}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n                {isShowInfo && ( //show currently chosen info entry\r\n                  <CurrentInfo\r\n                    question={question}\r\n                    setIsShowInfo={setIsShowInfo}\r\n                    INFOS={INFOS}\r\n                    currentInfoDisplayed={currentInfoDisplayed}\r\n                  />\r\n                )}\r\n                {!isShowInfo && (\r\n                  <div className=\"card\" id={question[0].id}>\r\n                    {isLoading && <Loading />}\r\n                    {!isLoading && (\r\n                      <div className=\"year\">{question[0].year}</div>\r\n                    )}\r\n                    <Image\r\n                      question={question}\r\n                      setImgLoaded={setImgLoaded}\r\n                      isLoading={isLoading}\r\n                    />\r\n                    {!isLoading && (\r\n                      <Question\r\n                        question={question}\r\n                        nextClick={nextClick}\r\n                        chooseDisplayedInfo={chooseDisplayedInfo}\r\n                      />\r\n                    )}\r\n                    {question[0].lose ? <LoseScreen grade={grade} /> : null}\r\n                  </div>\r\n                )}\r\n\r\n                {/* {lose && <LoseScreen grade={grade} />} */}\r\n                {!lose && (\r\n                  <div className=\"next\">\r\n                    <div className=\"question-number\">{questionCounter}</div>\r\n                    <button\r\n                      className=\"next-button\"\r\n                      onClick={() => handleClick()}\r\n                    >\r\n                      <BsArrowRight />\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\AdminPage.js",["181"],"import React, { useState } from \"react\";\r\nimport Editing from \"./EditingPage/editing\";\r\nimport \"../../styles/adminPage/adminPage.css\";\r\n\r\nconst AdminPage = ({ questions }) => {\r\n  const [passwordOK, setPasswordOK] = useState(true); //change to false --- JWT token\r\n  return (\r\n    <>\r\n      <div className=\"admin-page\">\r\n        {!passwordOK && (\r\n          <div className=\"authenticate-card\">\r\n            <h2>Admin authorization</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {passwordOK && <Editing questions={questions} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\CurrentInfo.js",["182","183"],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\InfoColumn.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Loading.js",["184"],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Question.js",["185","186","187","188"],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\Image.js",[],"C:\\Programming\\revolution-text-game\\src\\reducer.js",[],"C:\\Programming\\revolution-text-game\\src\\periods.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\GamePage\\LoseScreen.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\editing.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\allQuestions.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\newQuestion.js",[],"C:\\Programming\\revolution-text-game\\src\\components\\AdminPage\\EditingPage\\currentQuestion.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":50,"nodeType":"195","messageId":"196","endLine":2,"endColumn":54},{"ruleId":"193","severity":1,"message":"197","line":6,"column":22,"nodeType":"195","messageId":"196","endLine":6,"endColumn":35},{"ruleId":"193","severity":1,"message":"198","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":27},{"ruleId":"193","severity":1,"message":"199","line":2,"column":31,"nodeType":"195","messageId":"196","endLine":2,"endColumn":37},{"ruleId":"193","severity":1,"message":"200","line":3,"column":35,"nodeType":"195","messageId":"196","endLine":3,"endColumn":41},{"ruleId":"193","severity":1,"message":"201","line":3,"column":43,"nodeType":"195","messageId":"196","endLine":3,"endColumn":48},{"ruleId":"193","severity":1,"message":"194","line":3,"column":50,"nodeType":"195","messageId":"196","endLine":3,"endColumn":54},{"ruleId":"193","severity":1,"message":"202","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":22},{"ruleId":"193","severity":1,"message":"203","line":25,"column":10,"nodeType":"195","messageId":"196","endLine":25,"endColumn":24},{"ruleId":"193","severity":1,"message":"204","line":29,"column":17,"nodeType":"195","messageId":"196","endLine":29,"endColumn":25},{"ruleId":"205","severity":1,"message":"206","line":98,"column":6,"nodeType":"207","endLine":98,"endColumn":16,"suggestions":"208"},{"ruleId":"205","severity":1,"message":"209","line":109,"column":6,"nodeType":"207","endLine":109,"endColumn":23,"suggestions":"210"},{"ruleId":"193","severity":1,"message":"211","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":13,"column":9,"nodeType":"214","endLine":18,"endColumn":10},{"ruleId":"212","severity":1,"message":"213","line":38,"column":9,"nodeType":"214","endLine":43,"endColumn":10},{"ruleId":"215","severity":1,"message":"216","line":101,"column":23,"nodeType":"195","messageId":"217","endLine":101,"endColumn":35},{"ruleId":"218","severity":1,"message":"219","line":16,"column":30,"nodeType":"220","messageId":"221","endLine":16,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":17,"column":48,"nodeType":"220","messageId":"221","endLine":17,"endColumn":50},{"ruleId":"193","severity":1,"message":"222","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":19},{"ruleId":"189","replacedBy":"223"},{"ruleId":"191","replacedBy":"224"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":50,"nodeType":"195","messageId":"196","endLine":2,"endColumn":54},{"ruleId":"193","severity":1,"message":"198","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":27},{"ruleId":"193","severity":1,"message":"199","line":2,"column":31,"nodeType":"195","messageId":"196","endLine":2,"endColumn":37},{"ruleId":"193","severity":1,"message":"200","line":3,"column":35,"nodeType":"195","messageId":"196","endLine":3,"endColumn":41},{"ruleId":"193","severity":1,"message":"201","line":3,"column":43,"nodeType":"195","messageId":"196","endLine":3,"endColumn":48},{"ruleId":"193","severity":1,"message":"194","line":3,"column":50,"nodeType":"195","messageId":"196","endLine":3,"endColumn":54},{"ruleId":"193","severity":1,"message":"202","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":22},{"ruleId":"193","severity":1,"message":"203","line":25,"column":10,"nodeType":"195","messageId":"196","endLine":25,"endColumn":24},{"ruleId":"193","severity":1,"message":"204","line":29,"column":17,"nodeType":"195","messageId":"196","endLine":29,"endColumn":25},{"ruleId":"205","severity":1,"message":"206","line":98,"column":6,"nodeType":"207","endLine":98,"endColumn":16,"suggestions":"225"},{"ruleId":"205","severity":1,"message":"209","line":109,"column":6,"nodeType":"207","endLine":109,"endColumn":23,"suggestions":"226"},{"ruleId":"193","severity":1,"message":"197","line":6,"column":22,"nodeType":"195","messageId":"196","endLine":6,"endColumn":35},{"ruleId":"218","severity":1,"message":"219","line":16,"column":30,"nodeType":"220","messageId":"221","endLine":16,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":17,"column":48,"nodeType":"220","messageId":"221","endLine":17,"endColumn":50},{"ruleId":"193","severity":1,"message":"222","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":19},{"ruleId":"193","severity":1,"message":"211","line":2,"column":10,"nodeType":"195","messageId":"196","endLine":2,"endColumn":20},{"ruleId":"212","severity":1,"message":"213","line":13,"column":9,"nodeType":"214","endLine":18,"endColumn":10},{"ruleId":"212","severity":1,"message":"213","line":38,"column":9,"nodeType":"214","endLine":43,"endColumn":10},{"ruleId":"215","severity":1,"message":"216","line":101,"column":23,"nodeType":"195","messageId":"217","endLine":101,"endColumn":35},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setPasswordOK' is assigned a value but never used.","'useReducer' is defined but never used.","'useRef' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'INFOSReducer' is defined but never used.","'isShowQuestion' is assigned a value but never used.","'setGrade' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkOptions'. Either include it or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has missing dependencies: 'addINFO', 'question', and 'setShowQuestionSatus'. Either include them or remove the dependency array.",["230"],"'BsQuestion' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-redeclare","'jumpFromHere' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FaSpinner' is defined but never used.",["227"],["228"],["231"],["232"],"no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"233","fix":"237"},{"desc":"235","fix":"238"},"Update the dependencies array to be: [checkOptions, question]",{"range":"239","text":"240"},"Update the dependencies array to be: [addINFO, question, questionCounter, setShowQuestionSatus]",{"range":"241","text":"242"},{"range":"243","text":"240"},{"range":"244","text":"242"},[3265,3275],"[checkOptions, question]",[3484,3501],"[addINFO, question, questionCounter, setShowQuestionSatus]",[3265,3275],[3484,3501]]